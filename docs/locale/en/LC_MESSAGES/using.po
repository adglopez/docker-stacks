# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018- Project Jupyter
# This file is distributed under the same license as the docker-stacks
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: docker-stacks latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-21 03:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../using/common.md:1 1d36a257919d4a368c420f8601886d81
msgid "# Common Features"
msgstr ""

#: ../../using/common.md:3 28f0e0cfbb154bbabed1a2f24230498d
msgid ""
"A container launched from any Jupyter Docker Stacks image runs a Jupyter "
"Notebook server by default. The container does so by executing a `start-"
"notebook.sh` script. This script configures the internal container "
"environment and then runs `jupyter notebook`, passing it any command line"
" arguments received."
msgstr ""

# 298bc09d3aab4abcb413ad481d6242ff
#: ../../using/common.md:5 7dee2607be474142a0d7a5abe8bfa4d7
msgid ""
"This page describes the options supported by the startup script as well "
"as how to bypass it to run alternative commands."
msgstr ""

#: ../../using/common.md:7 4d08ddddc70a4b1f9b716191c9ac0769
msgid "## Notebook Options"
msgstr ""

#: ../../using/common.md:9 cf0ea06e6dde47099ed73d5652f0d648
msgid ""
"You can pass [Jupyter command line "
"options](https://jupyter.readthedocs.io/en/latest/projects/jupyter-"
"command.html) to the `start-notebook.sh` script when launching the "
"container. For example, to secure the Notebook server with a custom "
"password hashed using `IPython.lib.passwd()` instead of the default "
"token, you can run the following:"
msgstr ""

#: ../../using/common.md:11 006b342fc0a6400d977a9be442510f37
msgid ""
"``` docker run -d -p 8888:8888 jupyter/base-notebook start-notebook.sh "
"--NotebookApp.password='sha1:74ba40f8a388:c913541b7ee99d15d5ed31d4226bf7838f83a50e'"
" ```"
msgstr ""

# 4c08f057def247cbbfc8231e628cb792
#: ../../using/common.md:15 40117b4cb8a64591991d5dfc02a588b7
msgid ""
"For example, to set the base URL of the notebook server, you can run the "
"following:"
msgstr ""

#: ../../using/common.md:17 009f82daefe041fbba5bdfa27dbca218
msgid ""
"``` docker run -d -p 8888:8888 jupyter/base-notebook start-notebook.sh "
"--NotebookApp.base_url=/some/path ```"
msgstr ""

#: ../../using/common.md:21 276660deaf774a3d8c798d9e12ddf83c
msgid "## Docker Options"
msgstr ""

#: ../../using/common.md:23 6344a955bb524c808febfe8b1e9b671b
msgid ""
"You may instruct the `start-notebook.sh` script to customize the "
"container environment before launching the notebook server. You do so by "
"passing arguments to the `docker run` command."
msgstr ""

#: ../../using/common.md:26 29a275f9e05c4b96b0ebe42630dd1f2e
msgid ""
"`-e NB_USER=jovyan` - Instructs the startup script to change the default "
"container username from `jovyan` to the provided value. Causes the script"
" to rename the `jovyan` user home folder. For this option to take effect,"
" you must run the container with `--user root` and set the working "
"directory `-w /home/$NB_USER`. This feature is useful when mounting host "
"volumes with specific home folder."
msgstr ""

#: ../../using/common.md:27 081ba9f346d242abbe6f4d6cb571a9e2
msgid ""
"`-e NB_UID=1000` - Instructs the startup script to switch the numeric "
"user ID of `$NB_USER` to the given value. This feature is useful when "
"mounting host volumes with specific owner permissions. For this option to"
" take effect, you must run the container with `--user root`. (The startup"
" script will `su $NB_USER` after adjusting the user ID.) You might "
"consider using modern Docker options `--user` and `--group-add` instead. "
"See the last bullet below for details."
msgstr ""

#: ../../using/common.md:28 6b0e71ec401047818894168f92a6013a
msgid ""
"`-e NB_GID=100` - Instructs the startup script to change the primary "
"group of`$NB_USER` to `$NB_GID` (the new group is added with a name of "
"`$NB_GROUP` if it is defined, otherwise the group is named `$NB_USER`).  "
"This feature is useful when mounting host volumes with specific group "
"permissions. For this option to take effect, you must run the container "
"with `--user root`. (The startup script will `su $NB_USER` after "
"adjusting the group ID.) You might consider using modern Docker options "
"`--user` and `--group-add` instead. See the last bullet below for "
"details.  The user is added to supplemental group `users` (gid 100) in "
"order to allow write access to the home directory and `/opt/conda`.  If "
"you override the user/group logic, ensure the user stays in group `users`"
" if you want them to be able to modify files in the image."
msgstr ""

#: ../../using/common.md:29 7708043a10c34a7e9925d26262e1b7e6
msgid ""
"`-e NB_GROUP=<name>` - The name used for `$NB_GID`, which defaults to "
"`$NB_USER`.  This is only used if `$NB_GID` is specified and completely "
"optional: there is only cosmetic effect."
msgstr ""

#: ../../using/common.md:30 6d43db8ed27d433e888fa105d16fcc7f
msgid ""
"`-e NB_UMASK=<umask>` - Configures Jupyter to use a different umask value"
" from default, i.e. `022`. For example, if setting umask to `002`, new "
"files will be readable and writable by group members instead of just "
"writable by the owner. Wikipedia has a good article about "
"[umask](https://en.wikipedia.org/wiki/Umask). Feel free to read it in "
"order to choose the value that better fits your needs. Default value "
"should fit most situations. Note that `NB_UMASK` when set only applies to"
" the Jupyter process itself - you cannot use it to set a umask for "
"additional files created during run-hooks e.g. via `pip` or `conda` - if "
"you need to set a umask for these you must set `umask` for each command."
msgstr ""

#: ../../using/common.md:31 6b8d0a420ac64a0b9094438ad1cfd27c
msgid ""
"`-e CHOWN_HOME=yes` - Instructs the startup script to change the "
"`$NB_USER` home directory owner and group to the current value of "
"`$NB_UID` and `$NB_GID`. This change will take effect even if the user "
"home directory is mounted from the host using `-v` as described below. "
"The change is **not** applied recursively by default. You can change "
"modify the `chown` behavior by setting `CHOWN_HOME_OPTS` (e.g., `-e "
"CHOWN_HOME_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:32 4585919f456e471fb2bf6659a8cc6f76
msgid ""
"`-e CHOWN_EXTRA=\"<some dir>,<some other dir>\"` - Instructs the startup "
"script to change the owner and group of each comma-separated container "
"directory to the current value of `$NB_UID` and `$NB_GID`. The change is "
"**not** applied recursively by default. You can change modify the `chown`"
" behavior by setting `CHOWN_EXTRA_OPTS` (e.g., `-e "
"CHOWN_EXTRA_OPTS='-R'`)."
msgstr ""

#: ../../using/common.md:33 84fcda2183ec41a6ae4dfe124c5ad7f3
msgid ""
"`-e GRANT_SUDO=yes` - Instructs the startup script to grant the `NB_USER`"
" user passwordless `sudo` capability. You do **not** need this option to "
"allow the user to `conda` or `pip` install additional packages. This "
"option is useful, however, when you wish to give `$NB_USER` the ability "
"to install OS packages with `apt` or modify other root-owned files in the"
" container. For this option to take effect, you must run the container "
"with `--user root`. (The `start-notebook.sh` script will `su $NB_USER` "
"after adding `$NB_USER` to sudoers.) **You should only enable `sudo` if "
"you trust the user or if the container is running on an isolated host.**"
msgstr ""

#: ../../using/common.md:34 080d5b77d63e4672908e46b605162530
msgid ""
"`-e GEN_CERT=yes` - Instructs the startup script to generates a self-"
"signed SSL certificate and configure Jupyter Notebook to use it to accept"
" encrypted HTTPS connections."
msgstr ""

#: ../../using/common.md:35 cb910f8c991348b7b579e1c9396e59c9
msgid ""
"`-e JUPYTER_ENABLE_LAB=yes` - Instructs the startup script to run "
"`jupyter lab` instead of the default `jupyter notebook` command. Useful "
"in container orchestration environments where setting environment "
"variables is easier than change command line parameters."
msgstr ""

#: ../../using/common.md:36 fbf5f9309a5446e6acc6b2f7e23698fc
msgid ""
"`-e RESTARTABLE=yes` - Runs Jupyter in a loop so that quitting Jupyter "
"does not cause the container to exit.  This may be useful when you need "
"to install extensions that require restarting Jupyter."
msgstr ""

#: ../../using/common.md:37 aa42cd703cdd498e9b3c9100cf1f431f
msgid ""
"`-v /some/host/folder/for/work:/home/jovyan/work` - Mounts a host machine"
" directory as folder in the container. Useful when you want to preserve "
"notebooks and other work even after the container is destroyed. **You "
"must grant the within-container notebook user or group (`NB_UID` or "
"`NB_GID`) write access to the host directory (e.g., `sudo chown 1000 "
"/some/host/folder/for/work`).**"
msgstr ""

#: ../../using/common.md:38 8faafeb7c8b9445a88432746f5abcabd
msgid ""
"`--user 5000 --group-add users` - Launches the container with a specific "
"user ID and adds that user to the `users` group so that it can modify "
"files in the default home directory and `/opt/conda`. You can use these "
"arguments as alternatives to setting `$NB_UID` and `$NB_GID`."
msgstr ""

#: ../../using/common.md:40 09078eda637b478aaf9752e73f7263c6
msgid "## Startup Hooks"
msgstr ""

#: ../../using/common.md:42 601812bfacda4a44893281fb921577d3
msgid ""
"You can further customize the container environment by adding shell "
"scripts (`*.sh`) to be sourced or executables (`chmod +x`) to be run to "
"the paths below:"
msgstr ""

#: ../../using/common.md:45 22a8259a17fe4cce985a92ac100b6d55
msgid ""
"`/usr/local/bin/start-notebook.d/` - handled before any of the standard "
"options noted above are applied"
msgstr ""

#: ../../using/common.md:47 a5d06860d2e24973b637ce013f6f215e
msgid ""
"`/usr/local/bin/before-notebook.d/` - handled after all of the standard "
"options noted above are applied and just before the notebook server "
"launches"
msgstr ""

#: ../../using/common.md:50 3754d2964d134749be26a977da865e2a
msgid ""
"See the `run-hooks` function in the [`jupyter/base-notebook "
"start.sh`](https://github.com/jupyter/docker-stacks/blob/master/base-"
"notebook/start.sh) script for execution details."
msgstr ""

#: ../../using/common.md:53 2610d20ce98047b9a9987bdb10911399
msgid "## SSL Certificates"
msgstr ""

#: ../../using/common.md:55 cb56f9a02be046099d271c7ab1676f3a
msgid ""
"You may mount SSL key and certificate files into a container and "
"configure Jupyter Notebook to use them to accept HTTPS connections. For "
"example, to mount a host folder containing a `notebook.key` and "
"`notebook.crt` and use them, you might run the following:"
msgstr ""

#: ../../using/common.md:57 ../../using/common.md:67
#: 5552f1198fd846a5b91748168cebea7b 94e47d34f69c463a8f088c59d47eecfb
msgid "``` docker run -d -p 8888:8888 \\"
msgstr ""

#: ../../using/common.md:59 f18cbc1d53904b549c7dd7e29084f027
msgid ""
"-v /some/host/folder:/etc/ssl/notebook \\ jupyter/base-notebook start-"
"notebook.sh \\ --NotebookApp.keyfile=/etc/ssl/notebook/notebook.key "
"--NotebookApp.certfile=/etc/ssl/notebook/notebook.crt"
msgstr ""

#: ../../using/common.md:63 ../../using/common.md:72 ../../using/recipes.md:55
#: ../../using/recipes.md:67 ../../using/recipes.md:294
#: ../../using/recipes.md:515 ../../using/running.md:34
#: ../../using/running.md:75 ../../using/running.md:97
#: ../../using/specifics.md:147 0dd0e7836fc940229aca31db09cd0ec5
#: 1a06e5e2c2f84c08a95abff3e20b4c68 3d0339c9e1c14e8b8f5bf8facc480a40
#: 59c04c41ae214302b81a67d7b0d8baf5 6c58bb549edb4fb7a8e547d6efe8ffa7
#: 77634a0f07fb489b8fe7e31ade6acd14 afbfc8030ef649518fde5707df637a3a
#: d4668a2d6f9c4b269cf2402a9d4382e2 e66ae6e846c34c1abfe97e9c5ef7de09
#: e841fbefe5a841438f7b42a49bee9c5b
msgid "```"
msgstr ""

# e496d62ce1b7489eabf40a55471247b4
#: ../../using/common.md:65 ba1fc16cdcab43a8965e48e36d34fbdc
msgid ""
"Alternatively, you may mount a single PEM file containing both the key "
"and certificate. For example:"
msgstr ""

#: ../../using/common.md:69 47a25bfeafc84b36b90c57e7bd054643
msgid ""
"-v /some/host/folder/notebook.pem:/etc/ssl/notebook.pem \\ jupyter/base-"
"notebook start-notebook.sh \\ "
"--NotebookApp.certfile=/etc/ssl/notebook.pem"
msgstr ""

# 6ada67b7d1a34f59ad235d7e49e6a298
#: ../../using/common.md:74 5f674a2e2eca4bc39a3059116ac0f64c
msgid ""
"In either case, Jupyter Notebook expects the key and certificate to be a "
"base64 encoded text file. The certificate file or PEM may contain one or "
"more certificates (e.g., server, intermediate, and root)."
msgstr ""

# c908965cf0084fc2b276b50b47b87d18
#: ../../using/common.md:76 3c051664e68541c7a5f29168747b7044
msgid "For additional information about using SSL, see the following:"
msgstr ""

#: ../../using/common.md:78 c3aeedbe1aae46b585d47d068d374e80
msgid ""
"The [docker-stacks/examples](https://github.com/jupyter/docker-"
"stacks/tree/master/examples) for information about how to use [Let's "
"Encrypt](https://letsencrypt.org/) certificates when you run these stacks"
" on a publicly visible domain."
msgstr ""

#: ../../using/common.md:79 4548f571f0154e35a42a9a05ccb1c82e
msgid ""
"The [jupyter_notebook_config.py](https://github.com/jupyter/docker-"
"stacks/blob/master/base-notebook/jupyter_notebook_config.py) file for how"
" this Docker image generates a self-signed certificate."
msgstr ""

#: ../../using/common.md:80 1c679672f30045cb8d678671266a3329
msgid ""
"The [Jupyter Notebook documentation](https://jupyter-"
"notebook.readthedocs.io/en/latest/public_server.html#securing-a-notebook-"
"server) for best practices about securing a public notebook server in "
"general."
msgstr ""

#: ../../using/common.md:82 90b398e4d411411582b00b329c996912
msgid "## Alternative Commands"
msgstr ""

#: ../../using/common.md:84 68b7afb7b7f44e6faf039b9adb40cf66
msgid "### start.sh"
msgstr ""

#: ../../using/common.md:86 b5ee0df808e7484db2f5c893c603b0a4
msgid ""
"The `start-notebook.sh` script actually inherits most of its option "
"handling capability from a more generic `start.sh` script. The `start.sh`"
" script supports all of the features described above, but allows you to "
"specify an arbitrary command to execute. For example, to run the text-"
"based `ipython` console in a container, do the following:"
msgstr ""

#: ../../using/common.md:88 f2c3fa55d87c45a6b91a043170242330
msgid "``` docker run -it --rm jupyter/base-notebook start.sh ipython ```"
msgstr ""

# ad0be3e8095e4394afb367e9e56e1ca5
#: ../../using/common.md:92 ba884f81a64a45e1a08d1c9373496327
msgid "Or, to run JupyterLab instead of the classic notebook, run the following:"
msgstr ""

#: ../../using/common.md:94 4c23ccc088ff44cb9d37a293bcf9ed11
msgid ""
"``` docker run -it --rm -p 8888:8888 jupyter/base-notebook start.sh "
"jupyter lab ```"
msgstr ""

#: ../../using/common.md:98 7b469cc6a8564a569756079e9ffa7b9a
msgid ""
"This script is particularly useful when you derive a new Dockerfile from "
"this image and install additional Jupyter applications with subcommands "
"like `jupyter console`, `jupyter kernelgateway`, etc."
msgstr ""

#: ../../using/common.md:100 c139c0f0cdf440c6a2609d989ac73bb8
msgid "### Others"
msgstr ""

#: ../../using/common.md:102 c367b92e9d6c47feb247a47f4e5df23f
msgid ""
"You can bypass the provided scripts and specify an arbitrary start "
"command. If you do, keep in mind that features supported by the "
"`start.sh` script and its kin will not function (e.g., `GRANT_SUDO`)."
msgstr ""

#: ../../using/common.md:104 9a67011ce07449238b4c66107172c554
msgid "## Conda Environments"
msgstr ""

#: ../../using/common.md:106 2c343aba8241476e9cc4b8175b771758
msgid ""
"The default Python 3.x [Conda "
"environment](http://conda.pydata.org/docs/using/envs.html) resides in "
"`/opt/conda`. The `/opt/conda/bin` directory is part of the default "
"`jovyan` user's `$PATH`. That directory is also whitelisted for use in "
"`sudo` commands by the `start.sh` script."
msgstr ""

#: ../../using/common.md:108 6b45b6c91fd8413db3607492ee4bf7fb
msgid ""
"The `jovyan` user has full read/write access to the `/opt/conda` "
"directory. You can use either `conda` or `pip` to install new packages "
"without any additional permissions."
msgstr ""

#: ../../using/common.md:110 3b53c50153ad4f8ca7f1922747d121c1
msgid ""
"``` # install a package into the default (python 3.x) environment pip "
"install some-package conda install some-package ```"
msgstr ""

#: ../../using/recipes.md:1 0f6c771870e04f99abe5d0960ea45213
msgid "# Contributed Recipes"
msgstr ""

#: ../../using/recipes.md:3 48626f57f24f443da029e135742d667e
msgid ""
"Users sometimes share interesting ways of using the Jupyter Docker "
"Stacks. We encourage users to [contribute these "
"recipes](../contributing/recipes.md) to the documentation in case they "
"prove useful to other members of the community by submitting a pull "
"request to `docs/using/recipes.md`. The sections below capture this "
"knowledge."
msgstr ""

#: ../../using/recipes.md:8 2cc34ff79ea7459390b813098e726db0
msgid "## Using `sudo` within a container"
msgstr ""

#: ../../using/recipes.md:10 0d6703d35db04c2484ec998f0e386fcf
msgid ""
"Password authentication is disabled for the `NB_USER` (e.g., `jovyan`). "
"This choice was made to avoid distributing images with a weak default "
"password that users ~might~ will forget to change before running a "
"container on a publicly accessible host."
msgstr ""

#: ../../using/recipes.md:14 31e530b1c74947a48bb5f9c569edc931
msgid ""
"You can grant the within-container `NB_USER` passwordless `sudo` access "
"by adding `-e GRANT_SUDO=yes` and `--user root` to your Docker command "
"line or appropriate container orchestrator config."
msgstr ""

# f75300183d66418d958651b713e3c81e
#: ../../using/recipes.md:18 432db9ffdccd4ac1b566cb5db1004d10
msgid "For example:"
msgstr ""

#: ../../using/recipes.md:20 83b29b027db7446599b9746c15972711
msgid ""
"``` docker run -it -e GRANT_SUDO=yes --user root jupyter/minimal-notebook"
" ```"
msgstr ""

#: ../../using/recipes.md:24 8e625175270f4701a11452d067331741
msgid ""
"**You should only enable `sudo` if you trust the user and/or if the "
"container is running on an isolated host.** See [Docker security "
"documentation](https://docs.docker.com/engine/security/userns-remap/) for"
" more information about running containers as `root`."
msgstr ""

#: ../../using/recipes.md:27 a17b72d6e46240538f8935cf68f00432
msgid "## Using `pip install` or `conda install` in a Child Docker image"
msgstr ""

# cfb1a65ed1a4453e8b3355f1c0c23b1c
#: ../../using/recipes.md:29 083e2519876e4cb4a6e44d7cda564504
msgid "Create a new Dockerfile like the one shown below."
msgstr ""

#: ../../using/recipes.md:31 65b5ff78226d4fdeba9ce77ff1815fa5
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install in the default python3 environment RUN "
"pip install 'ggplot==0.6.8' ```"
msgstr ""

# 3ab615dc6fb6425d954cae4ce14f08b9
#: ../../using/recipes.md:38 93944d9174024c8185b73fc2d009bcb9
msgid "Then build a new image."
msgstr ""

#: ../../using/recipes.md:40 cc8c8cfcdb874677b06cbeccf0c0bb2e
msgid "```bash docker build --rm -t jupyter/my-datascience-notebook . ```"
msgstr ""

#: ../../using/recipes.md:44 553974b7339f4bbda284e88ac028b22e
msgid ""
"To use a requirements.txt file, first create your `requirements.txt` file"
" with the listing of packages desired. Next, create a new Dockerfile like"
" the one shown below."
msgstr ""

#: ../../using/recipes.md:47 a57b9cf769414c8e866d715b3e5a1e45
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"requirements.txt /tmp/ RUN pip install --requirement "
"/tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:53 ../../using/recipes.md:65
#: ../../using/recipes.md:129 169d4125a8104ba28a423d4c87ee1318
#: 47149ae825fa4f9cb71279e6b9e1a832 47a50d12a7154f83a2fc602cd28f196b
msgid "fix-permissions $CONDA_DIR && \\ fix-permissions /home/$NB_USER"
msgstr ""

# f2f035925d764425b9999b19d36c1d30
#: ../../using/recipes.md:57 05674c212de1463593ad8c95a59273f6
msgid "For conda, the Dockerfile is similar:"
msgstr ""

#: ../../using/recipes.md:59 759cee47611440699de7d3516b380453
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/datascience-"
"notebook:9f9e5ca8fe5a # Install from requirements.txt file COPY "
"requirements.txt /tmp/ RUN conda install --yes --file "
"/tmp/requirements.txt && \\"
msgstr ""

#: ../../using/recipes.md:69 a5bdc9f896ae43909628cd6dee732bce
msgid ""
"Ref: [docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c](https://github.com/jupyter"
"/docker-"
"stacks/commit/79169618d571506304934a7b29039085e77db78c#commitcomment-15960081)"
msgstr ""

#: ../../using/recipes.md:72 bc60ead2194b47dcbd1264d73a000458
msgid "## Add a Python 2.x environment"
msgstr ""

#: ../../using/recipes.md:74 21e5c6846a554378b966b66e186a81be
msgid ""
"Python 2.x was removed from all images on August 10th, 2017, starting in "
"tag `cc9feab481f7`. You can add a Python 2.x environment by defining your"
" own Dockerfile inheriting from one of the images like so:"
msgstr ""

#: ../../using/recipes.md:78 f5edc69d4e704b6bbf9600fe4a12c6fa
msgid "``` # Choose your desired base image FROM jupyter/scipy-notebook:latest"
msgstr ""

#: ../../using/recipes.md:82 9fee510148ca432785b546d23b3ca025
msgid ""
"# Create a Python 2.x environment using conda including at least the "
"ipython kernel # and the kernda utility. Add any additional packages you "
"want available for use # in a Python 2 notebook to the first line here "
"(e.g., pandas, matplotlib, etc.) RUN conda create --quiet --yes -p "
"$CONDA_DIR/envs/python2 python=2.7 ipython ipykernel kernda && \\"
msgstr ""

#: ../../using/recipes.md:86 ../../using/recipes.md:116
#: 32570d0891ff4a4c8d731193c115add2 9f50c3dd8558477491d124a692ed0053
msgid "conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:88 ../../using/recipes.md:253
#: ../../using/recipes.md:528 458938d6178c41c0ab8b6d9188eefb59
#: 9d5b66d35c984047b754b0a65e6507a5 b86bd4a4dcb44958bf0e2131d21a5d65
msgid "USER root"
msgstr ""

#: ../../using/recipes.md:90 9533c68a1380414caaef61b3e0d95c3c
msgid ""
"# Create a global kernelspec in the image and modify it so that it "
"properly activates # the python2 conda environment. RUN "
"$CONDA_DIR/envs/python2/bin/python -m ipykernel install && \\ "
"$CONDA_DIR/envs/python2/bin/kernda -o -y "
"/usr/local/share/jupyter/kernels/python2/kernel.json"
msgstr ""

#: ../../using/recipes.md:95 ab3992c0065a451b817472cff1811ea0
msgid "USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:98 8557adf3dcd445b187b528e8cbe0cf19
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/440](https://github.com/jupyter/docker-stacks/issues/440)"
msgstr ""

#: ../../using/recipes.md:101 98194a9078e04886b99e5fe29fff8ee2
msgid "## Add a Python 3.x environment"
msgstr ""

#: ../../using/recipes.md:103 0ef8216386ab4b469abdce6a318a2a39
msgid ""
"The default version of Python that ships with conda/ubuntu may not be the"
" version you want. To add a conda environment with a different version "
"and make it accessible to Jupyter, the instructions are very similar to "
"Python 2.x but are slightly simpler (no need to switch to `root`):"
msgstr ""

#: ../../using/recipes.md:106 61f005db4a0c46578c5a3ed2d43a0da4
msgid "``` # Choose your desired base image FROM jupyter/minimal-notebook:latest"
msgstr ""

#: ../../using/recipes.md:110 d2cf619edda94b6285fe1b9b41e666ee
msgid ""
"# name your environment and choose python 3.x version ARG "
"conda_env=python36 ARG py_ver=3.6"
msgstr ""

#: ../../using/recipes.md:114 bc980f667ee34f2cb0ac051587724693
msgid ""
"# you can add additional libraries you want conda to install by listing "
"them below the first line and ending with \"&& \\\" RUN conda create "
"--quiet --yes -p $CONDA_DIR/envs/$conda_env python=$py_ver ipython "
"ipykernel && \\"
msgstr ""

#: ../../using/recipes.md:118 2eda563a650b4ec0abcf2d60b0525459
msgid ""
"# alternatively, you can comment out the lines above and uncomment those "
"below # if you'd prefer to use a YAML file present in the docker build "
"context"
msgstr ""

#: ../../using/recipes.md:121 96ba2ab4448d453e8acec0b4fa744bb1
msgid ""
"# COPY environment.yml /home/$NB_USER/tmp/ # RUN cd /home/$NB_USER/tmp/ "
"&& \\ #     conda env create -p $CONDA_DIR/envs/$conda_env -f "
"environment.yml && \\ #     conda clean --all -f -y"
msgstr ""

#: ../../using/recipes.md:127 d14b9182be584fe398fd1a9a2af45622
msgid ""
"# create Python 3.x environment and link it to jupyter RUN "
"$CONDA_DIR/envs/${conda_env}/bin/python -m ipykernel install --user "
"--name=${conda_env} && \\"
msgstr ""

#: ../../using/recipes.md:132 71592e196dda434a99b04fbe0b140482
msgid ""
"# any additional pip installs can be added by uncommenting the following "
"line # RUN $CONDA_DIR/envs/${conda_env}/bin/pip install"
msgstr ""

#: ../../using/recipes.md:135 9745884eb75c47a0aab76af2e3b9bf75
msgid ""
"# prepend conda environment to path ENV PATH "
"$CONDA_DIR/envs/${conda_env}/bin:$PATH"
msgstr ""

#: ../../using/recipes.md:138 a033261781f14ddc87fe7a7ab61744c2
msgid ""
"# if you want this environment to be the default one, uncomment the "
"following line: # ENV CONDA_DEFAULT_ENV ${conda_env} ```"
msgstr ""

#: ../../using/recipes.md:142 fc48bf52d96d429ebf55c3871c03de62
msgid "## Run JupyterLab"
msgstr ""

#: ../../using/recipes.md:144 02109c7df6df47db9a27740a702e2488
msgid ""
"JupyterLab is preinstalled as a notebook extension starting in tag "
"[c33a7dc0eece](https://github.com/jupyter/docker-stacks/wiki/Docker-"
"build-history)."
msgstr ""

#: ../../using/recipes.md:147 01c10e510ccf4e729a5f59d825830bd3
msgid ""
"Run jupyterlab using a command such as `docker run -it --rm -p 8888:8888 "
"jupyter/datascience-notebook start.sh jupyter lab`"
msgstr ""

#: ../../using/recipes.md:150 f9bcf889e29c4fac8e1ffe5cbdeb4bde
msgid "## Dask JupyterLab Extension"
msgstr ""

#: ../../using/recipes.md:152 ae642b8c85df4a89967f27713e946901
msgid ""
"[Dask JupyterLab Extension](https://github.com/dask/dask-labextension) "
"provides a JupyterLab extension to manage Dask clusters, as well as embed"
" Dask's dashboard plots directly into JupyterLab panes. Create the "
"Dockerfile as:"
msgstr ""

#: ../../using/recipes.md:154 65222637dcd54c27a30c3447883a9aa9
msgid ""
"```dockerfile # Start from a core stack version FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:158 f4ac237765cb4293b645d7a66dd45cb7
msgid "# Install the Dask dashboard RUN pip install dask_labextension ; \\"
msgstr ""

#: ../../using/recipes.md:160 999b98813fe54f64a1c7cb5cc3784d08
msgid "jupyter labextension install -y --clean \\ dask-labextension"
msgstr ""

#: ../../using/recipes.md:163 8b31733d497c4308978c426449ce5e14
msgid "# Dask Scheduler & Bokeh ports EXPOSE 8787 EXPOSE 8786"
msgstr ""

#: ../../using/recipes.md:167 b93af5ae7250416ca5285147575071e2
msgid "ENTRYPOINT [\"jupyter\", \"lab\", \"--ip=0.0.0.0\", \"--allow-root\"] ```"
msgstr ""

#: ../../using/recipes.md:170 0445f94df0ef4ccaa70d1f117a06fbb2
msgid ""
"And build the image as: ``` docker build -t jupyter/scipy-"
"dasklabextension:latest . ```"
msgstr ""

#: ../../using/recipes.md:175 63f7c13e0f154209af877ae3e9b50d2f
msgid ""
"Once built, run using the command: ``` docker run -it --rm -p 8888:8888 "
"-p 8787:8787 jupyter/scipy-dasklabextension:latest ```"
msgstr ""

#: ../../using/recipes.md:180 b98449b82b5c447389cefe0731b1f118
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/999](https://github.com/jupyter/docker-stacks/issues/999)"
msgstr ""

#: ../../using/recipes.md:183 aa75b352816d42839ad98b466955eb20
msgid "## Let's Encrypt a Notebook server"
msgstr ""

#: ../../using/recipes.md:185 d8587f9ba8f64634b40fbb79da773099
msgid ""
"See the README for the simple automation here [https://github.com/jupyter"
"/docker-stacks/tree/master/examples/make-"
"deploy](https://github.com/jupyter/docker-stacks/tree/master/examples"
"/make-deploy) which includes steps for requesting and renewing a Let's "
"Encrypt certificate."
msgstr ""

#: ../../using/recipes.md:189 f824e3696418400988a5d99b5ce59e38
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/78](https://github.com/jupyter/docker-stacks/issues/78)"
msgstr ""

#: ../../using/recipes.md:192 5e9e4c018a034faf9ce8a432f968d188
msgid "## Slideshows with Jupyter and RISE"
msgstr ""

#: ../../using/recipes.md:194 a19e0adb8d644e90a01aff327243d6fd
msgid ""
"[RISE](https://github.com/damianavila/RISE) allows via extension to "
"create live slideshows of your notebooks, with no conversion, adding "
"javascript Reveal.js:"
msgstr ""

#: ../../using/recipes.md:197 e71a57b6d89f4578af09eb10a7067ebb
msgid ""
"``` # Add Live slideshows with RISE RUN conda install -c damianavila82 "
"rise ```"
msgstr ""

#: ../../using/recipes.md:202 4534aa8e0cb042278ceb1c6835657d24
msgid ""
"Credit: [Paolo D.](https://github.com/pdonorio) based on [docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:205 f0eda810125c45d88205c1a98f82adc9
msgid "## xgboost"
msgstr ""

# ce204678c3af4aa9a0fb55bb6de7554b
#: ../../using/recipes.md:207 3ebd9bd615c949c3aef6e8407ebc2586
msgid ""
"You need to install conda's gcc for Python xgboost to work properly. "
"Otherwise, you'll get an exception about libgomp.so.1 missing GOMP_4.0."
msgstr ""

#: ../../using/recipes.md:210 915caacbb02b4d3abec6c12a4a0fde46
#, python-format
msgid "``` %%bash conda install -y gcc pip install xgboost"
msgstr ""

#: ../../using/recipes.md:215 7ffe14a1169041a5800566d6fffb4afb
msgid "import xgboost ```"
msgstr ""

#: ../../using/recipes.md:218 87335af7304b462aacf30b52b7b75964
msgid "## Running behind a nginx proxy"
msgstr ""

# ca7763a5a35a47bd9fb29ae9d00feab3
#: ../../using/recipes.md:220 06d1c71c15c140a6a85b7341f1bbae7b
msgid ""
"Sometimes it is useful to run the Jupyter instance behind a nginx proxy, "
"for instance:"
msgstr ""

#: ../../using/recipes.md:222 381a0ba311b8433aace18b335c9c66e2
msgid ""
"you would prefer to access the notebook at a server URL with a path "
"(`https://example.com/jupyter`) rather than a port "
"(`https://example.com:8888`)"
msgstr ""

# a5129fb6e2b042f5b8161ed5318123f9
#: ../../using/recipes.md:224 7ed5fdf6b9d04bb1be1859f65fa8e347
msgid ""
"you may have many different services in addition to Jupyter running on "
"the same server, and want to nginx to help improve server performance in "
"manage the connections"
msgstr ""

#: ../../using/recipes.md:227 94df663f9d05445483c867f6bc652617
msgid ""
"Here is a [quick example NGINX "
"configuration](https://gist.github.com/cboettig/8643341bd3c93b62b5c2) to "
"get started. You'll need a server, a `.crt` and `.key` file for your "
"server, and `docker` & `docker-compose` installed. Then just download the"
" files at that gist and run `docker-compose up -d` to test it out. "
"Customize the `nginx.conf` file to set the desired paths and add other "
"services."
msgstr ""

#: ../../using/recipes.md:232 c4ca79cde22d47398dbe91affbff310e
msgid "## Host volume mounts and notebook errors"
msgstr ""

#: ../../using/recipes.md:234 91c82894fd884410ba055d4eec2b876f
msgid ""
"If you are mounting a host directory as `/home/jovyan/work` in your "
"container and you receive permission errors or connection errors when you"
" create a notebook, be sure that the `jovyan` user (UID=1000 by default) "
"has read/write access to the directory on the host. Alternatively, "
"specify the UID of the `jovyan` user on container startup using the `-e "
"NB_UID` option described in the [Common Features, Docker Options "
"section](../using/common.html#Docker-Options)"
msgstr ""

#: ../../using/recipes.md:240 a8d2d7a1e3224229bd999142d26ed1d7
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/199](https://github.com/jupyter/docker-stacks/issues/199)"
msgstr ""

#: ../../using/recipes.md:243 2214da91c9c14b9483d6112785b42c46
msgid "## Manpage installation"
msgstr ""

# 7fc6566074ee4ba3a4e579437d7f151d
#: ../../using/recipes.md:245 0585278a01824a6f8116a92f539d7f78
msgid ""
"Most containers, including our Ubuntu base image, ship without manpages "
"installed to save space. You can use the following dockerfile to inherit "
"from one of our images to enable manpages:"
msgstr ""

#: ../../using/recipes.md:248 9b9e4c8f2e9a4eb8a5ab7d0fd3e4a682
msgid ""
"```dockerfile # Choose your desired base image ARG BASE_CONTAINER=jupyter"
"/datascience-notebook:latest FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:255 b3dd05cb7672471ab2b685698655494d
msgid ""
"# Remove the manpage blacklist, install man, install docs RUN rm "
"/etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:257 ../../using/recipes.md:285
#: 1cf27bd17b2f4cd782c69745a6a5542b 527bb18154cc46d2be24fb8f5210343d
msgid ""
"&& apt-get update \\ && dpkg -l | grep ^ii | cut -d' ' -f3 | xargs apt-"
"get install -yq --no-install-recommends --reinstall man \\ && apt-get "
"clean \\ && rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:262 211d4c1c77394f039222b942318a9319
msgid ""
"# Workaround for a mandb bug, should be fixed in mandb > 2.8.5 # "
"https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN echo "
"\"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/man\" >> /etc/manpath.config "
"\\"
msgstr ""

#: ../../using/recipes.md:265 33f7eb38cddf43fd8a0a719406382d3f
msgid ""
"&& echo \"MANPATH_MAP ${CONDA_DIR}/bin ${CONDA_DIR}/share/man\" >> "
"/etc/manpath.config \\ && mandb"
msgstr ""

#: ../../using/recipes.md:268 271ed3bfa1e24ed8945807fc6491a5d6
msgid "USER $NB_UID ```"
msgstr ""

#: ../../using/recipes.md:271 d9915071263e416da60ad45dc7d94852
msgid ""
"Adding the documentation on top of an existing singleuser image wastes a "
"lot of space and requires reinstalling every system package, which can "
"take additional time and bandwidth; the `datascience-notebook` image has "
"been shown to grow by almost 3GB when adding manapages in this way. "
"Enabling manpages in the base Ubuntu layer prevents this container bloat:"
msgstr ""

#: ../../using/recipes.md:276 6d4d26db3a58474ba47d2e3372718a4c
msgid ""
"```Dockerfile # Ubuntu 18.04 (bionic) from 2018-05-26 # "
"https://github.com/docker-library/official-"
"images/commit/aac6a45b9eb2bffb8102353c350d341a410fb169 ARG "
"BASE_CONTAINER=ubuntu:bionic-20180526@sha256:c8c275751219dadad8fa56b3ac41ca6cb22219ff117ca98fe82b42f24e1ba64e"
" FROM $BASE_CONTAINER"
msgstr ""

#: ../../using/recipes.md:282 3dd933134bb14de1aafa16e06da6856e
msgid ""
"ENV DEBIAN_FRONTEND noninteractive # Remove the manpage blacklist, "
"install man, install docs RUN rm /etc/dpkg/dpkg.cfg.d/excludes \\"
msgstr ""

#: ../../using/recipes.md:290 6d483a66b6be463d8ff3fa604df31a99
msgid ""
"# Workaround for a mandb bug, should be fixed in mandb > 2.8.5 # "
"https://git.savannah.gnu.org/cgit/man-"
"db.git/commit/?id=8197d7824f814c5d4b992b4c8730b5b0f7ec589a RUN echo "
"\"MANPATH_MAP /opt/conda/bin /opt/conda/man\" >> /etc/manpath.config \\"
msgstr ""

#: ../../using/recipes.md:293 0db33f5331de45e2b01023117baea5a3
msgid ""
"&& echo \"MANPATH_MAP /opt/conda/bin /opt/conda/share/man\" >> "
"/etc/manpath.config"
msgstr ""

#: ../../using/recipes.md:296 72e57359169c47bebb4ee88787f42fde
msgid ""
"Be sure to check the current base image in `base-notebook` before "
"building."
msgstr ""

#: ../../using/recipes.md:298 4add604d0d5c4b73b22740b3f16dbeef
msgid "## JupyterHub"
msgstr ""

# af0ca920391b419b805ae3809388fcf2
#: ../../using/recipes.md:300 853a3a1cc6b143f59e6242a7a3b5bbaf
msgid "We also have contributed recipes for using JupyterHub."
msgstr ""

#: ../../using/recipes.md:302 74b3596a2ab34dc4a54c74c938f57764
msgid "### Use JupyterHub's dockerspawner"
msgstr ""

# 81e1dbb4c1c34f4c9e88630adff3d1e9
#: ../../using/recipes.md:304 a3c3b13c19b1459ca27c002996df8f6d
msgid ""
"In most cases for use with DockerSpawner, given any image that already "
"has a notebook stack set up, you would only need to add:"
msgstr ""

# 837b7a2dac01402e8cd2cc398bd5d785
#: ../../using/recipes.md:307 9058dd5ae5864187a92379d562874384
msgid "install the jupyterhub-singleuser script (for the right Python)"
msgstr ""

# d9816cb5ae2041e2a5fde9cdfb91262f
#: ../../using/recipes.md:308 a9faf3cdd68f450ab03acad5b434b171
msgid "change the command to launch the single-user server"
msgstr ""

#: ../../using/recipes.md:310 697cabf18319466b86d254959f7115c2
msgid ""
"Swapping out the `FROM` line in the `jupyterhub/singleuser` Dockerfile "
"should be enough for most cases."
msgstr ""

#: ../../using/recipes.md:313 34e4a86802e6446faa0cdae9cbc4c01c
msgid ""
"Credit: [Justin Tyberg](https://github.com/jtyberg), "
"[quanghoc](https://github.com/quanghoc), and [Min "
"RK](https://github.com/minrk) based on [docker-"
"stacks/issues/124](https://github.com/jupyter/docker-stacks/issues/124) "
"and [docker-stacks/pull/185](https://github.com/jupyter/docker-"
"stacks/pull/185)"
msgstr ""

#: ../../using/recipes.md:318 23eceac1b527430689a9109335b6a585
msgid "### Containers with a specific version of JupyterHub"
msgstr ""

#: ../../using/recipes.md:320 c4bd735a7c7b4832a43100b1a3513eca
msgid ""
"To use a specific version of JupyterHub, the version of `jupyterhub` in "
"your image should match the version in the Hub itself."
msgstr ""

#: ../../using/recipes.md:323 7b47359977664d6494f689125c69eb93
msgid ""
"``` FROM  jupyter/base-notebook:5ded1de07260 RUN pip install "
"jupyterhub==0.8.0b1 ```"
msgstr ""

#: ../../using/recipes.md:328 50bb2ab0ac7240a79569ec0ed5856fd5
msgid ""
"Credit: [MinRK](https://github.com/jupyter/docker-"
"stacks/issues/423#issuecomment-322767742)"
msgstr ""

#: ../../using/recipes.md:330 507cf4d4fbfb46168803e4e2c32732d3
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/177](https://github.com/jupyter/docker-stacks/issues/177)"
msgstr ""

#: ../../using/recipes.md:333 9e6e81e0107c409a8ac3126e36a09c6e
msgid "## Spark"
msgstr ""

# 975c96d6a0b843dfabd889c753671c93
#: ../../using/recipes.md:335 fc1516f2adc445129e35377ac396ca43
msgid "A few suggestions have been made regarding using Docker Stacks with spark."
msgstr ""

#: ../../using/recipes.md:337 53a37958989343ed86bdc2d37e7f3ccb
msgid "### Using PySpark with AWS S3"
msgstr ""

# dc4059d42eaa495f8ebca84ebc91ac09
#: ../../using/recipes.md:339 5f8af35648ac44889417cebe2ee871c2
msgid "Using Spark session for hadoop 2.7.3"
msgstr ""

#: ../../using/recipes.md:341 3f066e3dde2940abb49e348925c12905
msgid ""
"```py import os # !ls /usr/local/spark/jars/hadoop* # to figure out what "
"version of hadoop os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"\"org.apache.hadoop:hadoop-aws:2.7.3\" pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:346 f54163f15a3d4a14ab864426717a03d3
msgid "import pyspark myAccessKey = input() mySecretKey = input()"
msgstr ""

#: ../../using/recipes.md:354 8f15a33853964077bc608ba99016f655
msgid "spark = pyspark.sql.SparkSession.builder \\"
msgstr ""

#: ../../using/recipes.md:351 1f54c143a32f47a7a2f3b322845617de
msgid ""
".master(\"local[*]\") \\ .config(\"spark.hadoop.fs.s3a.access.key\", "
"myAccessKey) \\ .config(\"spark.hadoop.fs.s3a.secret.key\", mySecretKey) "
"\\ .getOrCreate()"
msgstr ""

#: ../../using/recipes.md:356 6f6f0564f114407d8a203a6f78a09acd
msgid "df = spark.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

# d2c12e3525bf4d9ca518fef02c4a79d3
#: ../../using/recipes.md:359 d4a83643762f41c1a145fd55d92c901a
msgid "Using Spark context for hadoop 2.6.0"
msgstr ""

#: ../../using/recipes.md:361 c89b06e752f24f2bb219159eaca024f1
msgid ""
"```py import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--packages "
"com.amazonaws:aws-java-sdk:1.10.34,org.apache.hadoop:hadoop-aws:2.6.0 "
"pyspark-shell'"
msgstr ""

#: ../../using/recipes.md:365 a84711771fb94531bc3983b55a1d0052
msgid "import pyspark sc = pyspark.SparkContext(\"local[*]\")"
msgstr ""

#: ../../using/recipes.md:368 d7050e0dee5446379c663cda7cef77e9
msgid "from pyspark.sql import SQLContext sqlContext = SQLContext(sc)"
msgstr ""

#: ../../using/recipes.md:371 0a1d9e9dd1064eb9ad65b7284d7e5b55
msgid ""
"hadoopConf = sc._jsc.hadoopConfiguration() myAccessKey = input() "
"mySecretKey = input() hadoopConf.set(\"fs.s3.impl\", "
"\"org.apache.hadoop.fs.s3native.NativeS3FileSystem\") "
"hadoopConf.set(\"fs.s3.awsAccessKeyId\", myAccessKey) "
"hadoopConf.set(\"fs.s3.awsSecretAccessKey\", mySecretKey)"
msgstr ""

#: ../../using/recipes.md:378 cbeb4080c17749c4a9b50f0905ad39a2
msgid "df = sqlContext.read.parquet(\"s3://myBucket/myKey\") ```"
msgstr ""

#: ../../using/recipes.md:381 9b2086846cce4a05887d524fd869ae8c
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/127](https://github.com/jupyter/docker-stacks/issues/127)"
msgstr ""

#: ../../using/recipes.md:384 8bf6692990f649e78dcb19db3c5ce174
msgid "### Using Local Spark JARs"
msgstr ""

#: ../../using/recipes.md:386 c91644ddb8854936b092c6041b9bf10f
msgid ""
"``` import os os.environ['PYSPARK_SUBMIT_ARGS'] = '--jars /home/jovyan"
"/spark-streaming-kafka-assembly_2.10-1.6.1.jar pyspark-shell' import "
"pyspark from pyspark.streaming.kafka import KafkaUtils from "
"pyspark.streaming import StreamingContext sc = pyspark.SparkContext() ssc"
" = StreamingContext(sc,1) broker = \"<my_broker_ip>\" directKafkaStream ="
" KafkaUtils.createDirectStream(ssc, [\"test1\"], "
"{\"metadata.broker.list\": broker}) directKafkaStream.pprint() "
"ssc.start() ```"
msgstr ""

#: ../../using/recipes.md:400 faa12a081dd74886925a5b997887de27
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/154](https://github.com/jupyter/docker-stacks/issues/154)"
msgstr ""

#: ../../using/recipes.md:403 cdb7510f64a8474ab4e5b598c1b1a7c3
msgid "### Using spark-packages.org"
msgstr ""

#: ../../using/recipes.md:405 4287fe50222e484dad3572e57371666f
msgid ""
"If you'd like to use packages from [spark-packages.org](https://spark-"
"packages.org/), see "
"[https://gist.github.com/parente/c95fdaba5a9a066efaab](https://gist.github.com/parente/c95fdaba5a9a066efaab)"
" for an example of how to specify the package identifier in the "
"environment before creating a SparkContext."
msgstr ""

#: ../../using/recipes.md:410 1b228640170348149c5a68c4729bf7e8
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/43](https://github.com/jupyter/docker-stacks/issues/43)"
msgstr ""

#: ../../using/recipes.md:413 5e39632b03fc4635bfb104f94ae5aba5
msgid "### Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
msgstr ""

#: ../../using/recipes.md:415 4d4b9e03dbb54a9abf5b66c83cfd8a73
msgid "``` FROM jupyter/all-spark-notebook"
msgstr ""

#: ../../using/recipes.md:418 83bdad90174241f39aa6ef415263ef0b
msgid ""
"# Set env vars for pydoop ENV HADOOP_HOME /usr/local/hadoop-2.7.3 ENV "
"JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64 ENV HADOOP_CONF_HOME "
"/usr/local/hadoop-2.7.3/etc/hadoop ENV HADOOP_CONF_DIR  "
"/usr/local/hadoop-2.7.3/etc/hadoop"
msgstr ""

#: ../../using/recipes.md:424 be7cef85a71747d38cadac2353779f5b
msgid ""
"USER root # Add proper open-jdk-8 not just the jre, needed for pydoop RUN"
" echo 'deb http://cdn-fastly.deb.debian.org/debian jessie-backports main'"
" > /etc/apt/sources.list.d/jessie-backports.list && \\"
msgstr ""

#: ../../using/recipes.md:427 ed4d9e9e5b6f4452b48b66be920316c7
msgid ""
"apt-get -y update && \\ apt-get install --no-install-recommends -t "
"jessie-backports -y openjdk-8-jdk && \\ rm /etc/apt/sources.list.d"
"/jessie-backports.list && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/ && \\"
msgstr ""

#: ../../using/recipes.md:435 9b1fdf45e47c4f34962e92aeb747c2fe
msgid "# Add hadoop binaries"
msgstr ""

#: ../../using/recipes.md:433 58a7ea0450db43a1a5c11c0384777782
msgid ""
"wget "
"http://mirrors.ukfast.co.uk/sites/ftp.apache.org/hadoop/common/hadoop-2.7.3/hadoop-2.7.3.tar.gz"
" && \\ tar -xvf hadoop-2.7.3.tar.gz -C /usr/local && \\ chown -R "
"$NB_USER:users /usr/local/hadoop-2.7.3 && \\ rm -f hadoop-2.7.3.tar.gz &&"
" \\"
msgstr ""

#: ../../using/recipes.md:440 816f60db55244d3d9fd76ea135a4e8b1
msgid "# Install os dependencies required for pydoop, pyhive"
msgstr ""

#: ../../using/recipes.md:438 c4772f5b6c854f788797cba48a7747e4
msgid ""
"apt-get update && \\ apt-get install --no-install-recommends -y build-"
"essential python-dev libsasl2-dev && \\ apt-get clean && \\ rm -rf "
"/var/lib/apt/lists/* && \\"
msgstr ""

#: ../../using/recipes.md:442 81fb024c66074617966b2dd955beb170
msgid ""
"# Remove the example hadoop configs and replace # with those for our "
"cluster. # Alternatively this could be mounted as a volume"
msgstr ""

#: ../../using/recipes.md:445 af17a0497f55416ebf7aeb5daceb58e5
msgid "rm -f /usr/local/hadoop-2.7.3/etc/hadoop/*"
msgstr ""

#: ../../using/recipes.md:447 37cee92ad2d64327b6f0ec41581d47d1
msgid ""
"# Download this from ambari / cloudera manager and copy here COPY "
"example-hadoop-conf/ /usr/local/hadoop-2.7.3/etc/hadoop/"
msgstr ""

#: ../../using/recipes.md:450 91963c8417c748389488ce545e7031ef
msgid ""
"# Spark-Submit doesn't work unless I set the following RUN echo "
"\"spark.driver.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf  && \\"
msgstr ""

#: ../../using/recipes.md:452 699662d832874d4392fa1320d918122d
msgid ""
"echo \"spark.yarn.am.extraJavaOptions -Dhdp.version=2.5.3.0-37\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ echo "
"\"spark.master=yarn\" >>  /usr/local/spark/conf/spark-defaults.conf && \\"
" echo \"spark.hadoop.yarn.timeline-service.enabled=false\" >> "
"/usr/local/spark/conf/spark-defaults.conf && \\ chown -R $NB_USER:users "
"/usr/local/spark/conf/spark-defaults.conf && \\ # Create an alternative "
"HADOOP_CONF_HOME so we can mount as a volume and repoint # using ENV var "
"if needed mkdir -p /etc/hadoop/conf/ && \\ chown $NB_USER:users "
"/etc/hadoop/conf/"
msgstr ""

#: ../../using/recipes.md:461 ../../using/recipes.md:509
#: 427a41c9c9ed456d9fd88a5d980bf05a cf247972e0b14108a6d2489bb1374710
msgid "USER $NB_USER"
msgstr ""

#: ../../using/recipes.md:463 96d86cb080b044128f539f74ddfad520
msgid ""
"# Install useful jupyter extensions and python libraries like : # - "
"Dashboards # - PyDoop # - PyHive RUN pip install jupyter_dashboards faker"
" && \\"
msgstr ""

#: ../../using/recipes.md:468 2b61a12dc9364cd981bfc213053d2072
msgid ""
"jupyter dashboards quick-setup --sys-prefix && \\ pip2 install pyhive "
"pydoop thrift sasl thrift_sasl faker"
msgstr ""

#: ../../using/recipes.md:471 f2692c952e5f44fda4e64d9827c5e4c6
msgid ""
"USER root # Ensure we overwrite the kernel config so that toree connects "
"to cluster RUN jupyter toree install --sys-prefix --spark_opts=\"--master"
" yarn --deploy-mode client --driver-memory 512m  --executor-memory 512m  "
"--executor-cores 1 --driver-java-options -Dhdp.version=2.5.3.0-37 --conf "
"spark.hadoop.yarn.timeline-service.enabled=false\" USER $NB_USER ```"
msgstr ""

#: ../../using/recipes.md:477 d65d43bfe7fd414ab6672cc050b20ec2
msgid ""
"Credit: [britishbadger](https://github.com/britishbadger) from [docker-"
"stacks/issues/369](https://github.com/jupyter/docker-stacks/issues/369)"
msgstr ""

#: ../../using/recipes.md:480 5c65651fdeba421b8b0372ee7a2ca30c
msgid ""
"## Run Jupyter Notebook/Lab inside an already secured environment (i.e., "
"with no token)"
msgstr ""

#: ../../using/recipes.md:482 e45460f31e0e498889f818810a1385fc
msgid ""
"(Adapted from [issue 728](https://github.com/jupyter/docker-"
"stacks/issues/728))"
msgstr ""

#: ../../using/recipes.md:484 c4f4aca14ce04d7691e524edd4f3887d
msgid ""
"The default security is very good. There are use cases, encouraged by "
"containers, where the jupyter container and the system it runs within, "
"lie inside the security boundary. In these use cases it is convenient to "
"launch the server without a password or token. In this case, you should "
"use the `start.sh` script to launch the server with no token:"
msgstr ""

# 7476a6d5eae74ecaae966e56390c096e
#: ../../using/recipes.md:489 55c12f12c57444a0b888f9150d0eba8a
msgid "For jupyterlab:"
msgstr ""

#: ../../using/recipes.md:491 9f71f77d2ed0484babfafd059c99e1d6
msgid ""
"``` docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter lab "
"--LabApp.token='' ```"
msgstr ""

# f2efc5a0ba6b4c53b2047cc5f22bdbaa
#: ../../using/recipes.md:495 a3d3f120e5714b3095e4d580510b91bf
msgid "For jupyter classic:"
msgstr ""

#: ../../using/recipes.md:497 d3c5f5d169604ab2826f8861e301ada5
msgid ""
"``` docker run jupyter/base-notebook:6d2a05346196 start.sh jupyter "
"notebook --NotebookApp.token='' ```"
msgstr ""

#: ../../using/recipes.md:501 aa25f843684440398ab455ec2071da0a
msgid "## Enable nbextension spellchecker for markdown (or any other nbextension)"
msgstr ""

# 8ccfbcb4264f48d0b6709fe81aa0a86d
#: ../../using/recipes.md:503 f0d732be577e484f9ce4d2e3b6949155
msgid "NB: this works for classic notebooks only"
msgstr ""

#: ../../using/recipes.md:505 8a912de20fba422a89c585d45edc5599
msgid ""
"``` # Update with your base image of choice FROM jupyter/minimal-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:513 76ee78d2b2ca4a7e996bddef7bd46c9a
msgid "RUN pip install jupyter_contrib_nbextensions && \\"
msgstr ""

#: ../../using/recipes.md:512 7ec5edceb9864f0fab7210a3b5fce3da
msgid ""
"jupyter contrib nbextension install --user && \\ # can modify or enable "
"additional extensions here jupyter nbextension enable spellchecker/main "
"--user"
msgstr ""

#: ../../using/recipes.md:517 7f496cf8991c4991a599f15e06111c6f
msgid ""
"Ref: [https://github.com/jupyter/docker-"
"stacks/issues/675](https://github.com/jupyter/docker-stacks/issues/675)"
msgstr ""

#: ../../using/recipes.md:520 91f91887cef140e980c554ecef9993ce
msgid "## Enable auto-sklearn notebooks"
msgstr ""

#: ../../using/recipes.md:522 1259836d1da64e1d810d3b8947116902
msgid ""
"Using `auto-sklearn` requires `swig`, which the other notebook images "
"lack, so it cant be experimented with. Also, there is no Conda package "
"for `auto-sklearn`."
msgstr ""

#: ../../using/recipes.md:524 b13a0e2eb39849d2a197730fdd19ccd8
msgid ""
"``` ARG BASE_CONTAINER=jupyter/scipy-notebook FROM jupyter/scipy-"
"notebook:latest"
msgstr ""

#: ../../using/recipes.md:530 65d542c92d0244b29180bea5eff30102
msgid ""
"# autosklearn requires swig, which no other image has RUN apt-get update "
"&& \\"
msgstr ""

#: ../../using/recipes.md:532 73452bbf603d4a46b7d6a204e195d619
msgid ""
"apt-get install -y --no-install-recommends swig && \\ apt-get clean && \\"
" rm -rf /var/lib/apt/lists/*"
msgstr ""

#: ../../using/recipes.md:537 c2342d0f68e24528869516bb1b63c164
msgid "USER $NB_UID"
msgstr ""

#: ../../using/recipes.md:539 93ba142dc5f548299030fe69c6aa62f9
msgid "RUN pip install --quiet --no-cache-dir auto-sklearn ```"
msgstr ""

#: ../../using/running.md:1 fba27e5e00af4db5a794438719d4f322
msgid "# Running a Container"
msgstr ""

# 1f345e7a53e94439b936b3f4bbc877da
# 324906e630c646b0ae10bbff6ed587fa
#: ../../using/running.md:3 ../../using/selecting.md:7
#: 34b60a687f1045d8aab3c482c799bc11 f7ab8beecb0749b08c59116190f58af5
msgid "Using one of the Jupyter Docker Stacks requires two choices:"
msgstr ""

# 781cbaffaea24fb08451cc83327cfa9b
# 1c6c83776a3b4a27a8ed4128a0dceeb7
#: ../../using/running.md:5 ../../using/selecting.md:9
#: 19c7302de2c346128fb1b376907a92ba e738743713834fdfa1ff508387a41737
msgid "Which Docker image you wish to use"
msgstr ""

# 632f67c9207e4ed9ba01bf59c4d942f7
# ab191cfc95204429b7c0271ecdf69d33
#: ../../using/running.md:6 ../../using/selecting.md:10
#: cc4faf89c6d84441b5b0fb3c5f8d243a ecb8130a65804123a198a523ab8ca9ac
msgid "How you wish to start Docker containers from that image"
msgstr ""

# ebf870aa1ede4e2ab8fdcb2cef0fd610
#: ../../using/running.md:8 ce05e18d873241d782921dcd71aa25b1
msgid "This section provides details about the second."
msgstr ""

#: ../../using/running.md:10 538dc1794e9a497ebc8624decf465ce1
msgid "## Using the Docker CLI"
msgstr ""

#: ../../using/running.md:12 da06304a7f8f43b79dd0a2ad27ecc929
msgid ""
"You can launch a local Docker container from the Jupyter Docker Stacks "
"using the [Docker command line "
"interface](https://docs.docker.com/engine/reference/commandline/cli/). "
"There are numerous ways to configure containers using the CLI. The "
"following are some common patterns."
msgstr ""

#: ../../using/running.md:14 75d2a272d8624b3cbfb5e10b853c5bb0
msgid ""
"**Example 1** This command pulls the `jupyter/scipy-notebook` image "
"tagged `2c80cf3537ca` from Docker Hub if it is not already present on the"
" local host. It then starts a container running a Jupyter Notebook server"
" and exposes the server on host port 8888. The server logs appear in the "
"terminal and include a URL to the notebook server."
msgstr ""

#: ../../using/running.md:16 54d8f1e1359d4c9ea6777e6a82e056d4
msgid "``` docker run -p 8888:8888 jupyter/scipy-notebook:2c80cf3537ca"
msgstr ""

#: ../../using/running.md:19 b48f14b8cad048218d02ba49c67368b8
msgid ""
"Executing the command: jupyter notebook [I 15:33:00.567 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"15:33:01.084 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"15:33:01.150 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 15:33:01.150 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 15:33:01.155 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 15:33:01.156 NotebookApp]"
" 0 active kernels [I 15:33:01.156 NotebookApp] The Jupyter Notebook is "
"running at: [I 15:33:01.157 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a [I "
"15:33:01.157 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 15:33:01.160 NotebookApp]"
msgstr ""

#: ../../using/running.md:31 ../../using/running.md:72
#: ../../using/running.md:94 42965d97806d4fe79b0ed3afc65e64b5
#: b5c73d27ebf241eb839671f7e55b7e9d d21c81d0e2454e1a9429cbbce55d4e75
msgid ""
"Copy/paste this URL into your browser when you connect for the first "
"time, to login with a token:"
msgstr ""

#: ../../using/running.md:33 0b92f6ed59934ae89a80d8b2b7973170
msgid "http://localhost:8888/?token=112bb073331f1460b73768c76dffb2f87ac1d4ca7870d46a"
msgstr ""

#: ../../using/running.md:36 0813c89618db44bc8a57f80d4c455bfb
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server but leaves the container"
" intact on disk for later restart or permanent deletion using commands "
"like the following:"
msgstr ""

#: ../../using/running.md:38 f96623927d9d4acc8b9c69eca451921f
msgid ""
"``` # list containers docker ps -a CONTAINER ID        IMAGE"
"                   COMMAND                  CREATED    STATUS"
"                      PORTS               NAMES d67fe77f1a84        "
"jupyter/base-notebook   \"tini -- start-noteb…\"   44 seconds ago    "
"Exited (0) 39 seconds ago                       cocky_mirzakhani"
msgstr ""

#: ../../using/running.md:44 14a9b74c10f64721b03daca0ecc9a637
msgid ""
"# start the stopped container docker start -a d67fe77f1a84 Executing the "
"command: jupyter notebook [W 16:45:02.020 NotebookApp] WARNING: The "
"notebook server is listening on all IP addresses and not using "
"encryption. This is not recommended. ..."
msgstr ""

#: ../../using/running.md:50 eb229a5ff134471890e1034ce4689c5a
msgid "# remove the stopped container docker rm d67fe77f1a84 d67fe77f1a84 ```"
msgstr ""

#: ../../using/running.md:55 dcc8f8cc75094cc09835fb673c344f7b
msgid ""
"**Example 2** This command pulls the `jupyter/r-notebook` image tagged "
"`e5c5a7d3e52d` from Docker Hub if it is not already present on the local "
"host. It then starts a container running a Jupyter Notebook server and "
"exposes the server on host port 10000. The server logs appear in the "
"terminal and include a URL to the notebook server, but with the internal "
"container port (8888) instead of the the correct host port (10000)."
msgstr ""

#: ../../using/running.md:57 6a18e2589b264aca85d3ed91d945b16b
msgid ""
"``` docker run --rm -p 10000:8888 -v \"$PWD\":/home/jovyan/work "
"jupyter/r-notebook:e5c5a7d3e52d"
msgstr ""

#: ../../using/running.md:60 92c3308ae2bf40b9b13c1785b348dea0
msgid ""
"Executing the command: jupyter notebook [I 19:31:09.573 NotebookApp] "
"Writing notebook server cookie secret to "
"/home/jovyan/.local/share/jupyter/runtime/notebook_cookie_secret [W "
"19:31:11.930 NotebookApp] WARNING: The notebook server is listening on "
"all IP addresses and not using encryption. This is not recommended. [I "
"19:31:12.085 NotebookApp] JupyterLab alpha preview extension loaded from "
"/opt/conda/lib/python3.6/site-packages/jupyterlab [I 19:31:12.086 "
"NotebookApp] JupyterLab application directory is "
"/opt/conda/share/jupyter/lab [I 19:31:12.117 NotebookApp] Serving "
"notebooks from local directory: /home/jovyan [I 19:31:12.117 NotebookApp]"
" 0 active kernels [I 19:31:12.118 NotebookApp] The Jupyter Notebook is "
"running at: [I 19:31:12.119 NotebookApp] http://[all ip addresses on your"
" system]:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac [I "
"19:31:12.120 NotebookApp] Use Control-C to stop this server and shut down"
" all kernels (twice to skip confirmation). [C 19:31:12.122 NotebookApp]"
msgstr ""

#: ../../using/running.md:74 23a8ed3bb9334e438523d15577e6cf67
msgid "http://localhost:8888/?token=3b8dce890cb65570fb0d9c4a41ae067f7604873bd604f5ac"
msgstr ""

#: ../../using/running.md:77 b6f5b7da550b41d5ad39b2cff29e76be
msgid ""
"Pressing `Ctrl-C` shuts down the notebook server and immediately destroys"
" the Docker container. Files written to `~/work` in the container remain "
"touched. Any other changes made in the container are lost."
msgstr ""

#: ../../using/running.md:79 2ee7e8749dd54f7cb34923a1040d1e18
msgid ""
"**Example 3** This command pulls the `jupyter/all-spark-notebook` image "
"currently tagged `latest` from Docker Hub if an image tagged `latest` is "
"not already present on the local host. It then starts a container named "
"`notebook` running a JupyterLab server and exposes the server on a "
"randomly selected port."
msgstr ""

#: ../../using/running.md:81 64ce4f94438f4e76bb0ac9ac0ddbe7e1
msgid "``` docker run -d -P --name notebook jupyter/all-spark-notebook ```"
msgstr ""

# 9a561b9bb5944059801c71862521d66a
#: ../../using/running.md:85 286ab48fa11349a3902c2837a4830107
msgid ""
"The assigned port and notebook server token are visible using other "
"Docker commands."
msgstr ""

#: ../../using/running.md:87 799e9e40e1f5479ebd67b292ed0d7aa3
msgid ""
"``` # get the random host port assigned to the container port 8888 docker"
" port notebook 8888 0.0.0.0:32769"
msgstr ""

#: ../../using/running.md:92 78abb2ffc58c4f2c9f21eb278b8a82d6
msgid "# get the notebook token from the logs docker logs --tail 3 notebook"
msgstr ""

#: ../../using/running.md:96 66ebf555911b400d92ca560193111d89
msgid "http://localhost:8888/?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00"
msgstr ""

# c4bc333e19324e2a93118e21b1f8f360
#: ../../using/running.md:99 3fb498d670b64913bdf2698895aa766a
msgid ""
"Together, the URL to visit on the host machine to access the server in "
"this case is "
"http://localhost:32769?token=15914ca95f495075c0aa7d0e060f1a78b6d94f70ea373b00."
msgstr ""

# bf82931e197b40ad940d9969993120a2
#: ../../using/running.md:101 19f387cb741f453eb83587d5591c8899
msgid ""
"The container runs in the background until stopped and/or removed by "
"additional Docker commands."
msgstr ""

#: ../../using/running.md:103 8a6c3242eade414289db5a643e8bb1ee
msgid "``` # stop the container docker stop notebook notebook"
msgstr ""

#: ../../using/running.md:108 da042b3ce4704d9fae032cd6a14e6e0d
msgid "# remove the container permanently docker rm notebook notebook ```"
msgstr ""

#: ../../using/running.md:113 1a88350135c14edaa9c48e1a47f63a86
msgid "## Using Binder"
msgstr ""

#: ../../using/running.md:115 ff84b1deac0f4ceabfd61839ca6a9756
msgid ""
"[Binder](https://mybinder.org/) is a service that allows you to create "
"and share custom computing environments for projects in version control. "
"You can use any of the Jupyter Docker Stacks images as a basis for a "
"Binder-compatible Dockerfile. See the [docker-stacks "
"example](https://mybinder.readthedocs.io/en/latest/sample_repos.html#using-a"
"-docker-image-from-the-jupyter-docker-stacks-repository) and [Using a "
"Dockerfile](https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html)"
" sections in the [Binder "
"documentation](https://mybinder.readthedocs.io/en/latest/index.html) for "
"instructions."
msgstr ""

#: ../../using/running.md:117 32f53c7ccfad43bfa4c9ab5fa0c4d7fc
msgid "## Using JupyterHub"
msgstr ""

#: ../../using/running.md:119 73df17082d374675abc1a8de52543404
msgid ""
"You can configure JupyterHub to launcher Docker containers from the "
"Jupyter Docker Stacks images. If you've been following the [Zero to "
"JupyterHub with Kubernetes](http://zero-to-"
"jupyterhub.readthedocs.io/en/latest/) guide, see the [Use an existing "
"Docker image](http://zero-to-jupyterhub.readthedocs.io/en/latest/user-"
"environment.html#use-an-existing-docker-image) section for details. If "
"you have a custom JupyterHub deployment, see the [Picking or building a "
"Docker image](https://github.com/jupyterhub/dockerspawner#picking-or-"
"building-a-docker-image) instructions for the "
"[dockerspawner](https://github.com/jupyterhub/dockerspawner) instead."
msgstr ""

#: ../../using/running.md:121 58dcc4190ed14139b97a1d96f10d0728
msgid "## Using Other Tools and Services"
msgstr ""

#: ../../using/running.md:123 a152dbc2bdad48cc9dd1054be14ba59e
msgid ""
"You can use the Jupyter Docker Stacks with any Docker-compatible "
"technology (e.g., [Docker Compose](https://docs.docker.com/compose/), "
"[docker-py](https://github.com/docker/docker-py), your favorite cloud "
"container service). See the documentation of the tool, library, or "
"service for details about how to reference, configure, and launch "
"containers from these images."
msgstr ""

#: ../../using/selecting.md:1 7dec8e952062460e8602bdf00252e6c5
msgid "# Selecting an Image"
msgstr ""

#: ../../using/selecting.md:3 0e9d33ed27ba413aba11ba0f2218b8c1
msgid "[Core Stacks](#core-stacks)"
msgstr ""

#: ../../using/selecting.md:4 62187a2897d740e6b2a6b4e8a19cfdd3
msgid "[Image Relationships](#image-relationships)"
msgstr ""

#: ../../using/selecting.md:5 6dc339251b174962ad47f63fdce6bdc5
msgid "[Community Stacks](#community-stacks)"
msgstr ""

# af7e19bb10ec44348e8121be4129ce8a
#: ../../using/selecting.md:12 b3b78cdb88ee4eed88066a46d14c6226
msgid "This section provides details about the first."
msgstr ""

#: ../../using/selecting.md:14 e53b1d8e2a1d4362b851c8c5f7955b5a
msgid "## Core Stacks"
msgstr ""

#: ../../using/selecting.md:16 f56930f4c38f4ba786c425944701cdce
msgid ""
"The Jupyter team maintains a set of Docker image definitions in the "
"[https://github.com/jupyter/docker-stacks](https://github.com/jupyter"
"/docker-stacks) GitHub repository. The following sections describe these "
"images including their contents, relationships, and versioning strategy."
msgstr ""

#: ../../using/selecting.md:19 d8d68a60d5cb416d99077760b2992de8
msgid "### jupyter/base-notebook"
msgstr ""

#: ../../using/selecting.md:21 5c253281771c4679bbb98949304c5661
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/base-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/base-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/base-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:25 c7b666940192441582206d15a54b3599
msgid ""
"`jupyter/base-notebook` is a small image supporting the [options common "
"across all core stacks](common.md). It is the basis for all other stacks."
msgstr ""

#: ../../using/selecting.md:27 9e2afaceca7e430795a070e53f745e53
msgid ""
"Minimally-functional Jupyter Notebook server (e.g., no LaTeX support for "
"saving notebooks as PDFs)"
msgstr ""

#: ../../using/selecting.md:28 7553be20da4744838a4215b8da253a4c
msgid "[Miniconda](https://conda.io/miniconda.html) Python 3.x in `/opt/conda`"
msgstr ""

# c5732a5536554f91b8dd7e8946beaab8
#: ../../using/selecting.md:29 808c0b2a227d4e3d8cc47c8d6c22f862
msgid "No preinstalled scientific computing packages"
msgstr ""

#: ../../using/selecting.md:30 deda517e50bf458e9ca5c418ab426954
msgid ""
"Unprivileged user `jovyan` (`uid=1000`, configurable, see options) in "
"group `users` (`gid=100`) with ownership over the `/home/jovyan` and "
"`/opt/conda` paths"
msgstr ""

#: ../../using/selecting.md:31 5f81218504094df28a9459e80a56e905
msgid ""
"`tini` as the container entrypoint and a `start-notebook.sh` script as "
"the default command"
msgstr ""

#: ../../using/selecting.md:32 e1f93f6cf2c14df19f8eda02022e17ee
msgid ""
"A `start-singleuser.sh` script useful for launching containers in "
"JupyterHub"
msgstr ""

#: ../../using/selecting.md:33 34be187690a24837a6c7a491abb1ae05
msgid ""
"A `start.sh` script useful for running alternative commands in the "
"container (e.g. `ipython`, `jupyter kernelgateway`, `jupyter lab`)"
msgstr ""

# 075e6ffe0f5b4d508d555992f5dd6fe1
#: ../../using/selecting.md:34 762efa4ab79e4d93a84a688d0442c7af
msgid "Options for a self-signed HTTPS certificate and passwordless sudo"
msgstr ""

#: ../../using/selecting.md:36 5b5b3796648041e7a39824bbeab28262
msgid "### jupyter/minimal-notebook"
msgstr ""

#: ../../using/selecting.md:38 283b8f818a204f8e925638aa941d50dd
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/minimal-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/minimal-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/minimal-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:42 8fb9db1a03124fe3b1064af57f678e7c
msgid ""
"`jupyter/minimal-notebook` adds command line tools useful when working in"
" Jupyter applications."
msgstr ""

#: ../../using/selecting.md:44 5e0fecbcbe394690b89c568be0f58ebb
msgid "Everything in `jupyter/base-notebook`"
msgstr ""

#: ../../using/selecting.md:45 9cc61ac70cf74bac8ede94c8c07a1d24
msgid "[TeX Live](https://www.tug.org/texlive/) for notebook document conversion"
msgstr ""

#: ../../using/selecting.md:46 8d204093766b4f5b8ca099cf0d553c67
msgid ""
"[git](https://git-scm.com/), [emacs](https://www.gnu.org/software/emacs/)"
" (actually `emacs-nox`), [vi](https://vim.org/) (actually `vim-tiny`), "
"[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
"editor.org/), tzdata, and unzip"
msgstr ""

#: ../../using/selecting.md:48 d289d79abd814aeeb39c38f9db7c03dc
msgid "### jupyter/r-notebook"
msgstr ""

#: ../../using/selecting.md:50 aefc7fb9762c415a81dd246df6f91e76
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-"
"stacks/tree/master/r-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-"
"stacks/commits/master/r-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/r-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:54 26d00060878f487897d377f73bdc7031
msgid "`jupyter/r-notebook` includes popular packages from the R ecosystem."
msgstr ""

#: ../../using/selecting.md:56 ../../using/selecting.md:78
#: 48cfa0f9e27f4930b57bdffa31f58580 b6dd1cee96eb4b7a940c698bb510b87a
msgid "Everything in `jupyter/minimal-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:57 9a19e295b04e4bd6871af0dc4cafca74
msgid "The [R](https://www.r-project.org/) interpreter and base environment"
msgstr ""

#: ../../using/selecting.md:58 ../../using/selecting.md:134
#: bd2d955dd3ee487cbc38a1dfb0f69419 d94f16640ac247ce83178aa74a26fcdb
msgid ""
"[IRKernel](https://irkernel.github.io/) to support R code in Jupyter "
"notebooks"
msgstr ""

#: ../../using/selecting.md:59 7a5d87c1a34f4c38b10600cade7dfeb7
msgid ""
"[tidyverse](https://www.tidyverse.org/) packages, including "
"[ggplot2](http://ggplot2.org/), [dplyr](http://dplyr.tidyverse.org/),"
msgstr ""

#: ../../using/selecting.md:60 b936ea0549fc46bea9ee7a851d83aefb
msgid ""
"[tidyr](http://tidyr.tidyverse.org/), "
"[readr](http://readr.tidyverse.org/), "
"[purrr](http://purrr.tidyverse.org/), "
"[tibble](http://tibble.tidyverse.org/), "
"[stringr](http://stringr.tidyverse.org/), "
"[lubridate](http://lubridate.tidyverse.org/), and "
"[broom](https://cran.r-project.org/web/packages/broom/vignettes/broom.html)"
" from [conda-forge](https://conda-forge.github.io/feedstocks) * "
"[plyr](https://cran.r-project.org/web/packages/plyr/index.html), "
"[devtools](https://cran.r-project.org/web/packages/devtools/index.html), "
"[shiny](https://shiny.rstudio.com/), "
"[rmarkdown](http://rmarkdown.rstudio.com/), "
"[forecast](https://cran.r-project.org/web/packages/forecast/forecast.pdf),"
" [rsqlite](https://cran.r-project.org/web/packages/RSQLite/index.html), "
"[reshape2](https://cran.r-project.org/web/packages/reshape2/reshape2.pdf),"
" "
"[nycflights13](https://cran.r-project.org/web/packages/nycflights13/index.html),"
" [caret](http://topepo.github.io/caret/index.html), "
"[rcurl](https://cran.r-project.org/web/packages/RCurl/index.html), and "
"[randomforest](https://cran.r-project.org/web/packages/randomForest/randomForest.pdf)"
" packages from [conda-forge](https://conda-forge.github.io/feedstocks)"
msgstr ""

#: ../../using/selecting.md:70 d5dd0f75258846fd8342f1e2a7725987
msgid "### jupyter/scipy-notebook"
msgstr ""

#: ../../using/selecting.md:72 1f99d3f423564b24a224c5fbc9463f50
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/scipy-notebook) | [Dockerfile commit history](https://github.com/jupyter"
"/docker-stacks/commits/master/scipy-notebook/Dockerfile) | [Docker Hub "
"image tags](https://hub.docker.com/r/jupyter/scipy-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:76 b0b8e60410d54a0a8e61b81ad2b0e053
msgid ""
"`jupyter/scipy-notebook` includes popular packages from the scientific "
"Python ecosystem."
msgstr ""

#: ../../using/selecting.md:79 44e16bbb83be42ee9bf928ed8fd3df6d
msgid ""
"[dask](https://dask.org/), [pandas](https://pandas.pydata.org/), "
"[numexpr](https://github.com/pydata/numexpr), "
"[matplotlib](https://matplotlib.org/), [scipy](https://www.scipy.org/),"
msgstr ""

#: ../../using/selecting.md:80 011d0e8085674348b5762cc1b134a04a
msgid ""
"[seaborn](https://seaborn.pydata.org/), [scikit-learn](http://scikit-"
"learn.org/stable/), [scikit-image](http://scikit-image.org/), "
"[sympy](http://www.sympy.org/en/index.html), "
"[cython](http://cython.org/), "
"[patsy](https://patsy.readthedocs.io/en/latest/), "
"[statsmodel](http://www.statsmodels.org/stable/index.html), "
"[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
"[dill](https://pypi.python.org/pypi/dill), "
"[numba](https://numba.pydata.org/), "
"[bokeh](https://bokeh.pydata.org/en/latest/), "
"[sqlalchemy](https://www.sqlalchemy.org/), [hdf5](http://www.h5py.org/), "
"[vincent](http://vincent.readthedocs.io/en/latest/), "
"[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
"[protobuf](https://developers.google.com/protocol-"
"buffers/docs/pythontutorial), [xlrd](http://www.python-excel.org/), "
"[bottleneck](https://bottleneck.readthedocs.io/en/latest/), and "
"[pytables](https://www.pytables.org/) packages * "
"[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and "
"[ipympl](https://github.com/matplotlib/jupyter-matplotlib) for "
"interactive visualizations and plots in Python notebooks * "
"[Facets](https://github.com/PAIR-code/facets) for visualizing machine "
"learning datasets"
msgstr ""

#: ../../using/selecting.md:89 ba44bb6c7f2b49869cfc7e40754eec05
msgid "### jupyter/tensorflow-notebook"
msgstr ""

#: ../../using/selecting.md:91 efca6348372e42edb772f1ef97b821ee
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/tensorflow-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/tensorflow-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/tensorflow-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:95 d03818c3d56f481bb5cc5816a6de04ee
msgid ""
"`jupyter/tensorflow-notebook` includes popular Python deep learning "
"libraries."
msgstr ""

#: ../../using/selecting.md:97 ../../using/selecting.md:121
#: 6f168e2c3a52406ea448ed643e42d011 afaa153b4f83434db3c1ab6976322c9f
msgid "Everything in `jupyter/scipy-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:98 4fa9cb42d6564ef68b6e875d787fb648
msgid ""
"[tensorflow](https://www.tensorflow.org/) and [keras](https://keras.io/) "
"machine learning libraries"
msgstr ""

#: ../../using/selecting.md:100 ebe67364dabd41c4b01c8083617367f4
msgid "### jupyter/datascience-notebook"
msgstr ""

#: ../../using/selecting.md:102 d84a4d0bb92b462bba44ce1a1b58bebd
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/datascience-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master"
"/datascience-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/datascience-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:106 3cbbbd0c7e484529b4e1f2d40dac0c3e
msgid ""
"`jupyter/datascience-notebook` includes libraries for data analysis from "
"the Julia, Python, and R communities."
msgstr ""

#: ../../using/selecting.md:108 3d9b54c4b34f446784dc5a00f3e98e79
msgid ""
"Everything in the `jupyter/scipy-notebook` and `jupyter/r-notebook` "
"images, and their ancestor images"
msgstr ""

#: ../../using/selecting.md:109 e067bb7765724ba0a5a19e2f77d6d38b
msgid "The [Julia](https://julialang.org/) compiler and base environment"
msgstr ""

#: ../../using/selecting.md:110 b135105f01a0401ca06f4028f53c44da
msgid ""
"[IJulia](https://github.com/JuliaLang/IJulia.jl) to support Julia code in"
" Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:111 cf1df7b17c7e4662a3431aac0736309c
msgid ""
"[HDF5](https://github.com/JuliaIO/HDF5.jl), "
"[Gadfly](http://gadflyjl.org/stable/), and "
"[RDatasets](https://github.com/johnmyleswhite/RDatasets.jl) packages"
msgstr ""

#: ../../using/selecting.md:113 df8ae2fb1ae14f3cb9810977f703e347
msgid "### jupyter/pyspark-notebook"
msgstr ""

#: ../../using/selecting.md:115 f9080ed87653470ea31cedfa4d3ab43b
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/pyspark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/pyspark-"
"notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/pyspark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:119 e3bb269f65674421aa549644b0e8bb66
msgid ""
"`jupyter/pyspark-notebook` includes Python support for Apache Spark, "
"optionally on Mesos."
msgstr ""

#: ../../using/selecting.md:122 ca5bf90136cd4c8e872087764e1031be
msgid "[Apache Spark](https://spark.apache.org/) with Hadoop binaries"
msgstr ""

#: ../../using/selecting.md:123 495178f7f1a04f1ba85dc0bcab5059aa
msgid "[Mesos](http://mesos.apache.org/) client libraries"
msgstr ""

#: ../../using/selecting.md:125 2625fa19524e47fda7c6bcb9eebcab4b
msgid "### jupyter/all-spark-notebook"
msgstr ""

#: ../../using/selecting.md:127 394ead2512224a70a18ba5b097afa2c1
msgid ""
"[Source on GitHub](https://github.com/jupyter/docker-stacks/tree/master"
"/all-spark-notebook) | [Dockerfile commit "
"history](https://github.com/jupyter/docker-stacks/commits/master/all-"
"spark-notebook/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/jupyter/all-spark-notebook/tags/)"
msgstr ""

#: ../../using/selecting.md:131 474277a0c10d4b7984b41f032414a6c7
msgid ""
"`jupyter/all-spark-notebook` includes Python, R, and Scala support for "
"Apache Spark, optionally on Mesos."
msgstr ""

#: ../../using/selecting.md:133 a59d069122c54a7cb6557a6bd2e1adf5
msgid "Everything in `jupyter/pyspark-notebook` and its ancestor images"
msgstr ""

#: ../../using/selecting.md:135 f2abf662ad3b4f76b77a1e2320e3da96
msgid ""
"[Apache Toree](https://toree.apache.org/) and [spylon-"
"kernel](https://github.com/maxpoint/spylon-kernel) to support Scala code "
"in Jupyter notebooks"
msgstr ""

#: ../../using/selecting.md:136 082955087ece4d9880707c2d0adbcbcb
msgid ""
"[ggplot2](http://ggplot2.org/), [sparklyr](http://spark.rstudio.com/), "
"and [rcurl](https://cran.r-project.org/web/packages/RCurl/index.html) "
"packages"
msgstr ""

#: ../../using/selecting.md:138 70e282a7d7c24978933208c769591fd6
msgid "### Image Relationships"
msgstr ""

#: ../../using/selecting.md:140 22fd38700e3e4d928f0a0dc73855588b
msgid ""
"The following diagram depicts the build dependency tree of the core "
"images. (i.e., the `FROM` statements in their Dockerfiles). Any given "
"image inherits the complete content of all ancestor images pointing to "
"it."
msgstr ""

#: ../../using/selecting.md:143 550070de62ce4ae3b783f333b3ba4001
msgid ""
"[![Image inheritance "
"diagram](../images/inherit.svg)](http://interactive.blockdiag.com/?compression=deflate&src"
"=eJyFzTEPgjAQhuHdX9Gws5sQjGzujsaYKxzmQrlr2msMGv-"
"71K0srO_3XGud9NNA8DSfgzESCFlBSdi0xkvQAKTNugw4QnL6GIU10hvX-"
"Zh7Z24OLLq2SjaxpvP10lX35vCf6pOxELFmUbQiUz4oQhYzMc3gCrRt2cWe_FKosmSjyFHC6OS1AwdQWCtyj7sfh523_BI9hKlQ25YdOFdv5fcH0kiEMA)"
msgstr ""

#: ../../using/selecting.md:146 0cc2d8c1cf754342b0f1a81f063dc41a
msgid "### Builds"
msgstr ""

#: ../../using/selecting.md:148 2226dbe216db4bbeb859ce01f6559729
msgid ""
"Pull requests to the `jupyter/docker-stacks` repository trigger builds of"
" all images on Travis CI. These images are for testing purposes only and "
"are not saved for use. When pull requests merge to master, all images "
"rebuild on Docker Cloud and become available to `docker pull` from Docker"
" Hub."
msgstr ""

#: ../../using/selecting.md:151 385d80cbed85452c9d970954e2898965
msgid "### Versioning"
msgstr ""

#: ../../using/selecting.md:153 dbd6a1565ebd487da9dbc2b939855e5d
msgid ""
"The `latest` tag in each Docker Hub repository tracks the master branch "
"`HEAD` reference on GitHub. `latest` is a moving target, by definition, "
"and will have backward-incompatible changes regularly."
msgstr ""

#: ../../using/selecting.md:156 9617ab9e6e224c1c9f11c1c10dfb2be4
msgid ""
"Every image on Docker Hub also receives a 12-character tag which "
"corresponds with the git commit SHA that triggered the image build. You "
"can inspect the state of the `jupyter/docker-stacks` repository for that "
"commit to review the definition of the image (e.g., images with tag "
"7c45ec67c8e7 were built from [https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7](https://github.com/jupyter/docker-"
"stacks/tree/7c45ec67c8e7))."
msgstr ""

#: ../../using/selecting.md:160 dee310eae65e4820a270bcca496501fd
msgid ""
"You must refer to git-SHA image tags when stability and reproducibility "
"are important in your work. (e.g. `FROM jupyter/scipy-"
"notebook:7c45ec67c8e7`, `docker run -it --rm jupyter/scipy-"
"notebook:7c45ec67c8e7`). You should only use `latest` when a one-off "
"container instance is acceptable (e.g., you want to briefly try a new "
"library in a notebook)."
msgstr ""

#: ../../using/selecting.md:164 9aadad11ff5e494db4e79f4dac0db05e
msgid "## Community Stacks"
msgstr ""

# a448d28293544f72b0e5de024b0a1ef5
#: ../../using/selecting.md:166 b94441e6ba6e44f1b4008192e054ac86
msgid ""
"The core stacks are just a tiny sample of what's possible when combining "
"Jupyter with other technologies. We encourage members of the Jupyter "
"community to create their own stacks based on the core images and link "
"them below."
msgstr ""

#: ../../using/selecting.md:169 8f96c43b4051481d976228bcd573dd9f
msgid ""
"[csharp-notebook is a community Jupyter Docker Stack image. Try C# in "
"Jupyter Notebooks](https://github.com/tlinnet/csharp-notebook). The image"
" includes more"
msgstr ""

#: ../../using/selecting.md:170 bac0a2e9f10b4ba4925a976faaaa262a
msgid ""
"than 200 Jupyter Notebooks with example C# code and can readily be tried "
"online via mybinder.org. Click here to launch "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/tlinnet"
"/csharp-notebook/master)."
msgstr ""

#: ../../using/selecting.md:173 f493d401fb05465ba05978c3305ce21d
msgid ""
"[education-notebook is a community Jupyter Docker Stack "
"image](https://github.com/umsi-mads/education-notebook). The image "
"includes nbgrader and RISE on top of"
msgstr ""

#: ../../using/selecting.md:174 6d69de717ff243549bfea490ad027088
msgid ""
"the datascience-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/umsi-mads/education-notebook/master)."
msgstr ""

#: ../../using/selecting.md:177 2d6025ab4e0240bca2b975a6ef77d34e
msgid "__crosscompass/ihaskell-notebook__"
msgstr ""

#: ../../using/selecting.md:179 d77a8cb6482c4fd5b93f4de470c14670
msgid ""
"[Source on GitHub](https://github.com/jamesdbrock/ihaskell-notebook) | "
"[Dockerfile commit history](https://github.com/jamesdbrock/ihaskell-"
"notebook/commits/master/Dockerfile) | [Docker Hub image "
"tags](https://hub.docker.com/r/crosscompass/ihaskell-notebook/tags)"
msgstr ""

#: ../../using/selecting.md:183 b1869870a0b442bfbbc433d3c5cc3f17
msgid ""
"`crosscompass/ihaskell-notebook` is based on "
"[IHaskell](https://github.com/gibiansky/IHaskell). Includes popular "
"packages and example notebooks."
msgstr ""

#: ../../using/selecting.md:185 5a329b3449104d75b44912870ce26a6e
msgid ""
"Try it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
"/learn-you-a-haskell-"
"notebook/master?urlpath=lab/tree/ihaskell_examples/ihaskell/IHaskell.ipynb)"
msgstr ""

#: ../../using/selecting.md:187 cb7ad2ee8373403cb9538ac90e985f1a
msgid ""
"[java-notebook is a community Jupyter Docker Stack "
"image](https://github.com/jbindinga/java-notebook). The image includes"
msgstr ""

#: ../../using/selecting.md:188 5f7a76840f4a49639222a14f9d5df8aa
msgid ""
"[IJava](https://github.com/SpencerPark/IJava) kernel on top of the "
"minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jbindinga"
"/java-notebook/master)."
msgstr ""

#: ../../using/selecting.md:191 aae8c31d9d5645a5aa098e1c8c562d20
msgid ""
"[sage-notebook](https://github.com/sharpTrick/sage-notebook) is a "
"community Jupyter Docker Stack image with the "
"[sagemath](https://sagemath.org) kernel on top of"
msgstr ""

#: ../../using/selecting.md:192 d3686164ea854f729d38aeae3ebcf938
msgid ""
"the minimal-notebook image. Click here to launch it on "
"[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/sharpTrick"
"/sage-notebook/master)."
msgstr ""

#: ../../using/selecting.md:195 e40f72141dbf42439da781ae2984223d
msgid ""
"[GPU-Jupyter](https://github.com/iot-salzburg/gpu-jupyter/): Leverage "
"Jupyter Notebooks with the power of your NVIDIA GPU and perform GPU "
"calculations using"
msgstr ""

#: ../../using/selecting.md:196 8bf1597b7aad4808a0d2227c41538b8f
msgid ""
"Tensorflow and Pytorch in collaborative notebooks. This is done by "
"generating a Dockerfile, that consists of the **nvidia/cuda** base image,"
" the well-maintained **docker-stacks** that is integrated as submodule "
"and GPU-able libraries like **Tensorflow**, **Keras** and **PyTorch** on "
"top of it."
msgstr ""

#: ../../using/selecting.md:201 be35752a55a242eca550d5995c31d540
msgid ""
"[cgspatial-notebook](https://github.com/SCiO-systems/cgspatial-notebook) "
"is a community Jupyter Docker Stack image. The image includes major "
"geospatial Python &"
msgstr ""

#: ../../using/selecting.md:202 2d7e836501524a7b870b38611260b115
msgid ""
"R libraries on top of the datascience-notebook image. Try it on "
"binder:[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh"
"/SCiO-systems/cgspatial-notebook/master)"
msgstr ""

#: ../../using/selecting.md:206 0583ad2fb49d45adad5d02a327308a59
msgid ""
"See the [contributing guide](../contributing/stacks.md) for information "
"about how to create your own Jupyter Docker Stack."
msgstr ""

#: ../../using/specifics.md:1 ccd51faa2356405486dc6f3ef2dce383
msgid "# Image Specifics"
msgstr ""

# 06b0d21a881140a29e17e5b9fa5598ab
#: ../../using/specifics.md:3 ec1f49a93c8a49fda1b187193c53bceb
msgid "This page provides details about features specific to one or more images."
msgstr ""

#: ../../using/specifics.md:5 9911be7f3543457cae37c828ed65694e
msgid "## Apache Spark"
msgstr ""

#: ../../using/specifics.md:7 fb27ff0ed24240ada5b0bc236f03d7a1
msgid ""
"**Specific Docker Image Options** * `-p 4040:4040` - The `jupyter"
"/pyspark-notebook` and `jupyter/all-spark-notebook` images open [SparkUI "
"(Spark Monitoring and Instrumentation "
"UI)](http://spark.apache.org/docs/latest/monitoring.html) at default port"
" `4040`, this option map `4040` port inside docker container to `4040` "
"port on host machine . Note every new spark context that is created is "
"put onto an incrementing port (ie. 4040, 4041, 4042, etc.), and it might "
"be necessary to open multiple ports. For example: `docker run -d -p "
"8888:8888 -p 4040:4040 -p 4041:4041 jupyter/pyspark-notebook`"
msgstr ""

#: ../../using/specifics.md:10 23ba14af1b794b45ba7effe1ffc5a3d0
msgid "**Usage Examples**"
msgstr ""

#: ../../using/specifics.md:12 8a1bcc130cb34743a97282bb60e21dc2
msgid ""
"The `jupyter/pyspark-notebook` and `jupyter/all-spark-notebook` images "
"support the use of [Apache Spark](https://spark.apache.org/) in Python, "
"R, and Scala notebooks. The following sections provide some examples of "
"how to get started using them."
msgstr ""

#: ../../using/specifics.md:14 6cf89d29db7441b6924fb7bcc61900e0
msgid "### Using Spark Local Mode"
msgstr ""

# 15a0171869f3437481b9dfb2aec3db00
#: ../../using/specifics.md:16 15cbbb8ce4e64f85b8b8b648254be933
msgid ""
"Spark local mode is useful for experimentation on small data when you do "
"not have a Spark cluster available."
msgstr ""

#: ../../using/specifics.md:18 ../../using/specifics.md:74
#: c8e33c5b7f2c47d0bb3a30fe89a2d40b fde6e5eec6034513a7d758d41401d5b0
msgid "#### In a Python Notebook"
msgstr ""

#: ../../using/specifics.md:20 c594bf8ff2224aa9901c6786b60055e6
msgid ""
"```python from pyspark.sql import SparkSession spark = "
"SparkSession.builder.appName(\"SimpleApp\").getOrCreate() # do something "
"to prove it works spark.sql('SELECT \"Test\" as c1').show() ```"
msgstr ""

#: ../../using/specifics.md:27 ../../using/specifics.md:101
#: db9a201e39f647a2b2d80de4170d469b ee15cf46d46d4cf3b871500ed5234706
msgid "#### In a R Notebook"
msgstr ""

#: ../../using/specifics.md:29 ../../using/specifics.md:103
#: 7781377d2d7549f09884ab3c553ecb58 7ee75af51f4148578595a2c92f66248d
msgid "```r library(SparkR)"
msgstr ""

#: ../../using/specifics.md:32 502c776c9ca0425cad26360d22015921
msgid "as <- sparkR.session(\"local[*]\")"
msgstr ""

#: ../../using/specifics.md:34 1f7ff5e49c0e4d1d9508ed30d48d827a
msgid ""
"# do something to prove it works df <- as.DataFrame(iris) head(filter(df,"
" df$Petal_Width > 0.2)) ```"
msgstr ""

#: ../../using/specifics.md:39 ../../using/specifics.md:122
#: 2d96a412c0484cac9774ffeb95d59e97 54af4dee621644ff9e529078093d12e9
msgid "#### In a Spylon Kernel Scala Notebook"
msgstr ""

#: ../../using/specifics.md:41 4fe87bcb3d914284a0e9400ed7bcb6fc
#, python-format
msgid ""
"Spylon kernel instantiates a `SparkContext` for you in variable `sc` "
"after you configure Spark options in a `%%init_spark` magic cell."
msgstr ""

#: ../../using/specifics.md:43 8db82b7d3c63478c9d515337b496427e
#, python-format
msgid ""
"```python %%init_spark # Configure Spark to use a local master "
"launcher.master = \"local[*]\" ```"
msgstr ""

#: ../../using/specifics.md:49 ../../using/specifics.md:131
#: 1cddff7806e3401680dd7168bd51e32f 5ef7ea5f2c1b4d2eb3fff32a0cc8d390
msgid ""
"```scala // Now run Scala code that uses the initialized SparkContext in "
"sc val rdd = sc.parallelize(0 to 999) rdd.takeSample(false, 5) ```"
msgstr ""

#: ../../using/specifics.md:55 ../../using/specifics.md:137
#: 96f3e50230b24cba8e866a1aeb2800be a758fc07a3c1427792d45174f5eee461
msgid "#### In an Apache Toree Scala Notebook"
msgstr ""

#: ../../using/specifics.md:57 e1e4d38084504510927d65b1d74914e3
msgid ""
"Apache Toree instantiates a local `SparkContext` for you in variable `sc`"
" when the kernel starts."
msgstr ""

#: ../../using/specifics.md:59 bda078a9bfa5427c81650a91a11f496b
msgid "```scala val rdd = sc.parallelize(0 to 999) rdd.takeSample(false, 5) ```"
msgstr ""

#: ../../using/specifics.md:64 359004c12d6b4385a5ec0c1efd7803a1
msgid "### Connecting to a Spark Cluster on Mesos"
msgstr ""

# 4926e921fbd24baba9888b3f08cf4f51
#: ../../using/specifics.md:66 999199148c5b48d287070ed5b7567a49
msgid "This configuration allows your compute cluster to scale with your data."
msgstr ""

#: ../../using/specifics.md:68 d32c71a2b3334336b9b2684a5b1cf869
msgid ""
"[Deploy Spark on Mesos](http://spark.apache.org/docs/latest/running-on-"
"mesos.html)."
msgstr ""

#: ../../using/specifics.md:69 0f8e737934384f4897eb70ce4e140d26
msgid ""
"Configure each slave with [the `--no-switch_user` "
"flag](https://open.mesosphere.com/reference/mesos-slave/) or create the "
"`$NB_USER` account on every slave node."
msgstr ""

#: ../../using/specifics.md:70 ../../using/specifics.md:166
#: 9344bf4c2f844db99763545aab0886be fe14226acbe2488cbd5473f9c60b1bec
msgid ""
"Run the Docker container with `--net=host` in a location that is network "
"addressable by all of your Spark workers. (This is a [Spark networking "
"requirement](http://spark.apache.org/docs/latest/cluster-"
"overview.html#components).)"
msgstr ""

#: ../../using/specifics.md:71 ../../using/specifics.md:167
#: 224ab571dc184f20b39642c609dd6d38 715ecf1715b44a71925469cef441949e
msgid ""
"NOTE: When using `--net=host`, you must also use the flags `--pid=host -e"
" TINI_SUBREAPER=true`. See https://github.com/jupyter/docker-"
"stacks/issues/64 for details."
msgstr ""

# 16c4327879294075a64b4329f972321c
#: ../../using/specifics.md:72 6ae6612c8bd04087ab5f697aa08883c4
msgid "Follow the language specific instructions below."
msgstr ""

#: ../../using/specifics.md:76 7908d38676e2407a9073e9f0078814b5
msgid ""
"```python import os # make sure pyspark tells workers to use python3 not "
"2 if both are installed os.environ['PYSPARK_PYTHON'] = '/usr/bin/python3'"
msgstr ""

#: ../../using/specifics.md:81 f9d47a29e82f4e77ada49aeb7a603a29
msgid "import pyspark conf = pyspark.SparkConf()"
msgstr ""

#: ../../using/specifics.md:84 29f5f55ead0f42769893fb382de67b25
msgid ""
"# point to mesos master or zookeeper entry (e.g., "
"zk://10.10.10.10:2181/mesos) conf.setMaster(\"mesos://10.10.10.10:5050\")"
" # point to spark binary package in HDFS or on local filesystem on all "
"slave # nodes (e.g., file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) "
"conf.set(\"spark.executor.uri\", \"hdfs://10.10.10.10/spark/spark-2.2.0"
"-bin-hadoop2.7.tgz\") # set other options as desired "
"conf.set(\"spark.executor.memory\", \"8g\") "
"conf.set(\"spark.core.connection.ack.wait.timeout\", \"1200\")"
msgstr ""

#: ../../using/specifics.md:93 46e3531a28a24b4ba8a4f7c90bde8291
msgid "# create the context sc = pyspark.SparkContext(conf=conf)"
msgstr ""

#: ../../using/specifics.md:96 f418a36c67b341c2a8dea017f1a7068f
msgid ""
"# do something to prove it works rdd = sc.parallelize(range(100000000)) "
"rdd.sumApprox(3) ```"
msgstr ""

#: ../../using/specifics.md:106 47c86dfea8144d68936bda9600e032aa
msgid ""
"# Point to mesos master or zookeeper entry (e.g., "
"zk://10.10.10.10:2181/mesos) # Point to spark binary package in HDFS or "
"on local filesystem on all slave # nodes (e.g., "
"file:///opt/spark/spark-2.2.0-bin-hadoop2.7.tgz) in sparkEnvir # Set "
"other options in sparkEnvir sc <- "
"sparkR.session(\"mesos://10.10.10.10:5050\", sparkEnvir=list("
msgstr ""

#: ../../using/specifics.md:111 14646d6f6f3e48bc9266f209c8dc86a3
msgid ""
"spark.executor.uri=\"hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
"hadoop2.7.tgz\", spark.executor.memory=\"8g\" )"
msgstr ""

#: ../../using/specifics.md:114 edc43e1a6a5947c49dd25e90014ddb35
msgid ")"
msgstr ""

#: ../../using/specifics.md:116 82ca5dd11357401697dc553079027c84
msgid ""
"# do something to prove it works data(iris) df <- as.DataFrame(iris) "
"head(filter(df, df$Petal_Width > 0.2)) ```"
msgstr ""

#: ../../using/specifics.md:124 1988b04b739e47a39fdb53d94ee0da03
#, python-format
msgid ""
"```python %%init_spark # Configure the location of the mesos master and "
"spark distribution on HDFS launcher.master = \"mesos://10.10.10.10:5050\""
" launcher.conf.spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0"
"-bin-hadoop2.7.tgz ```"
msgstr ""

#: ../../using/specifics.md:139 245960f56df94fb882ae4fd359a466fd
msgid ""
"The Apache Toree kernel automatically creates a `SparkContext` when it "
"starts based on configuration information from its command line arguments"
" and environment variables. You can pass information about your Mesos "
"cluster via the `SPARK_OPTS` environment variable when you spawn a "
"container."
msgstr ""

# 3e3d5ec9fa554e75989856139938f4f8
#: ../../using/specifics.md:141 d9cfe342d8454b78852687df23c3cca7
msgid ""
"For instance, to pass information about a Mesos master, Spark binary "
"location in HDFS, and an executor options, you could start the container "
"like so:"
msgstr ""

#: ../../using/specifics.md:143 7b626a3d70f3403393025e354a89d57a
msgid ""
"``` docker run -d -p 8888:8888 -e SPARK_OPTS='--"
"master=mesos://10.10.10.10:5050 \\"
msgstr ""

#: ../../using/specifics.md:145 c01ba9d66df0441b86d4dabc76ab74b4
msgid ""
"--spark.executor.uri=hdfs://10.10.10.10/spark/spark-2.2.0-bin-"
"hadoop2.7.tgz \\ --spark.executor.memory=8g' jupyter/all-spark-notebook"
msgstr ""

# fa8494a4dde544109b9f6f49ac28178f
#: ../../using/specifics.md:149 22dc890b6e57464bbd45de78ba310384
msgid ""
"Note that this is the same information expressed in a notebook in the "
"Python case above. Once the kernel spec has your cluster information, you"
" can test your cluster in an Apache Toree notebook like so:"
msgstr ""

#: ../../using/specifics.md:151 54ac85de1d804ce9bb3313cf50269bb2
msgid ""
"```scala // should print the value of --master in the kernel spec "
"println(sc.master)"
msgstr ""

#: ../../using/specifics.md:155 84453b7aa09b4cb0aff54f88335a4be2
msgid ""
"// do something to prove it works val rdd = sc.parallelize(0 to 99999999)"
" rdd.sum() ```"
msgstr ""

#: ../../using/specifics.md:160 a5dbd0ebe8274d50a3d172ffd4c39aa1
msgid "### Connecting to a Spark Cluster in Standalone Mode"
msgstr ""

# 79db0ba4244a4701aa8dfe0053d5579c
#: ../../using/specifics.md:162 9eab28cd52784f54b66d3f2df5762989
msgid ""
"Connection to Spark Cluster on Standalone Mode requires the following set"
" of steps:"
msgstr ""

# 2c728588b6df4753a0c08f969364a79a
#: ../../using/specifics.md:164 afa032197a8b4d9bb0e35dd762b3291f
msgid ""
"Verify that the docker image (check the Dockerfile) and the Spark Cluster"
" which is being deployed, run the same version of Spark."
msgstr ""

#: ../../using/specifics.md:165 aa501c214f3047dabe083f37ab958aae
msgid ""
"[Deploy Spark in Standalone Mode](http://spark.apache.org/docs/latest"
"/spark-standalone.html)."
msgstr ""

# 3c781f06114240e28dcdb0c40a5d5cf5
#: ../../using/specifics.md:168 c06a5f8302c948248bc5e5d106ecb34b
msgid ""
"The language specific instructions are almost same as mentioned above for"
" Mesos, only the master url would now be something like "
"spark://10.10.10.10:7077"
msgstr ""

#: ../../using/specifics.md:170 460f68c595ab47ae9214cf641c0847f4
msgid "## Tensorflow"
msgstr ""

#: ../../using/specifics.md:172 8233f6aece3d40888e85ac995844524f
msgid ""
"The `jupyter/tensorflow-notebook` image supports the use of "
"[Tensorflow](https://www.tensorflow.org/) in single machine or "
"distributed mode."
msgstr ""

#: ../../using/specifics.md:174 caa67f5184c64be790c073e963d053df
msgid "### Single Machine Mode"
msgstr ""

#: ../../using/specifics.md:176 ../../using/specifics.md:190
#: 8545f987e8694d8db154913a3804e3ab f53dba75b4bc4f2aa0de4af8bed27db9
msgid "```python import tensorflow as tf"
msgstr ""

#: ../../using/specifics.md:179 6ce58717991349b5b3535d927baf756e
msgid "hello = tf.Variable('Hello World!')"
msgstr ""

#: ../../using/specifics.md:181 0ab2d034e71041fabed34c52efc537e5
msgid "sess = tf.Session() init = tf.global_variables_initializer()"
msgstr ""

#: ../../using/specifics.md:184 ../../using/specifics.md:199
#: b3cecb06d6234d76a9eb88f99f74ecd0 c01b32291aef4ebdaf3393b9beda3707
msgid "sess.run(init) sess.run(hello) ```"
msgstr ""

#: ../../using/specifics.md:188 6e89d0affb794ea0a453a865ccf38dce
msgid "### Distributed Mode"
msgstr ""

#: ../../using/specifics.md:193 42a81db36b564d0c9050c64811f6c96b
msgid "hello = tf.Variable('Hello Distributed World!')"
msgstr ""

#: ../../using/specifics.md:195 c1c7f9feee7e434592837ec56a24d57c
msgid ""
"server = tf.train.Server.create_local_server() sess = "
"tf.Session(server.target) init = tf.global_variables_initializer()"
msgstr ""

# 5e06096348924f51881d05f984e91381
#~ msgid "This list only has 2 examples. You can be the next!"
#~ msgstr ""

# 7ed4a7919dfd446c817c64a7e420e95e
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired.  Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# 56f2354437c74650a70bd154647eed26
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started.  You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed.  Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out.  Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 577f93f6511a4b17afcef782def7f802
#~ msgid "ipywidgets for interactive visualizations in Python notebooks"
#~ msgstr ""

#~ msgid ""
#~ "You must refer to git-SHA image"
#~ " tags when stability and reproducibility"
#~ " are important in your work. (e.g."
#~ " FROM jupyter/scipy-notebook:7c45ec67c8e7, docker"
#~ " run  -it --rm jupyter/scipy-"
#~ "notebook:7c45ec67c8e7). You should only use"
#~ " latest when a one-off container "
#~ "instance is acceptable (e.g., you want"
#~ " to briefly try a new library "
#~ "in a notebook)."
#~ msgstr ""

# 909f17eb57bc4e4e8df8216423d9c008
#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 7c56c3891bd94336b21fc82d5aeab6ae
#~ msgid "Common Features"
#~ msgstr ""

# bf4e4ace24d144538edc1d9a2605cfef
#~ msgid ""
#~ "A container launched from any Jupyter"
#~ " Docker Stacks image runs a Jupyter"
#~ " Notebook server by default. The "
#~ "container does so by executing a "
#~ "start-notebook.sh script. This script "
#~ "configures the internal container environment"
#~ " and then runs jupyter notebook, "
#~ "passing it any command line arguments"
#~ " received."
#~ msgstr ""

# 056d2f8a9a4343668131dfb9de71838a
#~ msgid "Notebook Options"
#~ msgstr ""

# d1c32336e1f545d496f7a411fb18cb4e
#~ msgid ""
#~ "You can pass Jupyter command line "
#~ "options to the start-notebook.sh script"
#~ " when launching the container. For "
#~ "example, to secure the Notebook server"
#~ " with a custom password hashed using"
#~ " IPython.lib.passwd() instead of the "
#~ "default token, you can run the "
#~ "following:"
#~ msgstr ""

# 58ad38b4300449da805bc67e73be5fd0
#~ msgid "Docker Options"
#~ msgstr ""

# 0118197966504e3ab1c03a0c49e68c97
#~ msgid ""
#~ "You may instruct the start-notebook.sh"
#~ " script to customize the container "
#~ "environment before launching the notebook "
#~ "server. You do so by passing "
#~ "arguments to the docker run command."
#~ msgstr ""

# 391efc925af248fa9bfa2220bdf0730b
#~ msgid ""
#~ "-e NB_USER=jovyan - Instructs the "
#~ "startup script to change the default "
#~ "container username from jovyan to the"
#~ " provided value. Causes the script to"
#~ " rename the jovyan user home folder."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root and set the working "
#~ "directory -w /home/$NB_USER. This feature "
#~ "is useful when mounting host volumes "
#~ "with specific home folder."
#~ msgstr ""

# 97929e34ea254dd289e235276b72068f
#~ msgid ""
#~ "-e NB_UID=1000 - Instructs the startup"
#~ " script to switch the numeric user"
#~ " ID of $NB_USER to the given "
#~ "value. This feature is useful when "
#~ "mounting host volumes with specific "
#~ "owner permissions. For this option to"
#~ " take effect, you must run the "
#~ "container with --user root. (The startup"
#~ " script will su $NB_USER after "
#~ "adjusting the user ID.) You might "
#~ "consider using modern Docker options "
#~ "--user and --group-add instead. See "
#~ "the last bullet below for details."
#~ msgstr ""

# 71cac0c045d342008ca80ce23ef32431
#~ msgid ""
#~ "-e NB_GID=100 - Instructs the startup"
#~ " script to change the primary group"
#~ " of$NB_USER to $NB_GID (the new group"
#~ " is added with a name of "
#~ "$NB_GROUP if it is defined, otherwise"
#~ " the group is named $NB_USER).  This"
#~ " feature is useful when mounting host"
#~ " volumes with specific group permissions."
#~ " For this option to take effect, "
#~ "you must run the container with "
#~ "--user root. (The startup script will"
#~ " su $NB_USER after adjusting the "
#~ "group ID.) You might consider using "
#~ "modern Docker options --user and "
#~ "--group-add instead. See the last "
#~ "bullet below for details.  The user "
#~ "is added to supplemental group users "
#~ "(gid 100) in order to allow write"
#~ " access to the home directory and "
#~ "/opt/conda.  If you override the "
#~ "user/group logic, ensure the user stays"
#~ " in group users if you want "
#~ "them to be able to modify files"
#~ " in the image."
#~ msgstr ""

# 5ca13bdafc214f8b997ca2752592f1be
#~ msgid ""
#~ "-e NB_GROUP=<name> - The name used "
#~ "for $NB_GID, which defaults to $NB_USER."
#~ "  This is only used if $NB_GID "
#~ "is specified and completely optional: "
#~ "there is only cosmetic effect."
#~ msgstr ""

# 4d57d0bd85ae417687747831670ec35f
#~ msgid ""
#~ "-e NB_UMASK=<umask> - Configures Jupyter "
#~ "to use a different umask value "
#~ "from default, i.e. 022. For example, "
#~ "if setting umask to 002, new files"
#~ " will be readable and writable by "
#~ "group members instead of just writable"
#~ " by the owner. Wikipedia has a "
#~ "good article about umask. Feel free "
#~ "to read it in order to choose "
#~ "the value that better fits your "
#~ "needs. Default value should fit most "
#~ "situations. Note that NB_UMASK when set"
#~ " only applies to the Jupyter process"
#~ " itself - you cannot use it to"
#~ " set a umask for additional files "
#~ "created during run-hooks e.g. via "
#~ "pip or conda - if you need "
#~ "to set a umask for these you "
#~ "must set umask for each command."
#~ msgstr ""

# 580637e7f00d4a36b69ce3f6ec43370e
#~ msgid ""
#~ "-e CHOWN_HOME=yes - Instructs the "
#~ "startup script to change the $NB_USER"
#~ " home directory owner and group to"
#~ " the current value of $NB_UID and "
#~ "$NB_GID. This change will take effect"
#~ " even if the user home directory "
#~ "is mounted from the host using -v"
#~ " as described below. The change is"
#~ " not applied recursively by default. "
#~ "You can change modify the chown "
#~ "behavior by setting CHOWN_HOME_OPTS (e.g., "
#~ "-e CHOWN_HOME_OPTS='-R')."
#~ msgstr ""

# 42bbfaf32b43482ba99263a74b383ac3
#~ msgid ""
#~ "-e CHOWN_EXTRA=\"<some dir>,<some other dir>\""
#~ " - Instructs the startup script to"
#~ " change the owner and group of "
#~ "each comma-separated container directory "
#~ "to the current value of $NB_UID "
#~ "and $NB_GID. The change is not "
#~ "applied recursively by default. You can"
#~ " change modify the chown behavior by"
#~ " setting CHOWN_EXTRA_OPTS (e.g., -e "
#~ "CHOWN_EXTRA_OPTS='-R')."
#~ msgstr ""

# 399a6318e3724410a4dcc93cc9d8736d
#~ msgid ""
#~ "-e GRANT_SUDO=yes - Instructs the "
#~ "startup script to grant the NB_USER "
#~ "user passwordless sudo capability. You "
#~ "do not need this option to allow"
#~ " the user to conda or pip "
#~ "install additional packages. This option "
#~ "is useful, however, when you wish "
#~ "to give $NB_USER the ability to "
#~ "install OS packages with apt or "
#~ "modify other root-owned files in "
#~ "the container. For this option to "
#~ "take effect, you must run the "
#~ "container with --user root. (The "
#~ "start-notebook.sh script will su $NB_USER"
#~ " after adding $NB_USER to sudoers.) "
#~ "You should only enable sudo if you"
#~ " trust the user or if the "
#~ "container is running on an isolated "
#~ "host."
#~ msgstr ""

# 3c6485fef5d44f72b4693c1a3d1ec35c
#~ msgid ""
#~ "-e GEN_CERT=yes - Instructs the startup"
#~ " script to generates a self-signed"
#~ " SSL certificate and configure Jupyter "
#~ "Notebook to use it to accept "
#~ "encrypted HTTPS connections."
#~ msgstr ""

# efe931ecaeac4348a6f0112a65371306
#~ msgid ""
#~ "-e JUPYTER_ENABLE_LAB=yes - Instructs the "
#~ "startup script to run jupyter lab "
#~ "instead of the default jupyter notebook"
#~ " command. Useful in container orchestration"
#~ " environments where setting environment "
#~ "variables is easier than change command"
#~ " line parameters."
#~ msgstr ""

# fe40b3a059e54a53a7a5fde86441ae72
#~ msgid ""
#~ "-e RESTARTABLE=yes - Runs Jupyter in "
#~ "a loop so that quitting Jupyter "
#~ "does not cause the container to "
#~ "exit.  This may be useful when you"
#~ " need to install extensions that "
#~ "require restarting Jupyter."
#~ msgstr ""

# bb82e70358e7452d86eb1b8e971fbf27
#~ msgid ""
#~ "-v /some/host/folder/for/work:/home/jovyan/work - "
#~ "Mounts a host machine directory as "
#~ "folder in the container. Useful when "
#~ "you want to preserve notebooks and "
#~ "other work even after the container "
#~ "is destroyed. You must grant the "
#~ "within-container notebook user or group "
#~ "(NB_UID or NB_GID) write access to "
#~ "the host directory (e.g., sudo chown "
#~ "1000 /some/host/folder/for/work)."
#~ msgstr ""

# 403f8e6101534bc0951bf5bb0b03c5a0
#~ msgid ""
#~ "--user 5000 --group-add users - "
#~ "Launches the container with a specific"
#~ " user ID and adds that user to"
#~ " the users group so that it can"
#~ " modify files in the default home "
#~ "directory and /opt/conda. You can use"
#~ " these arguments as alternatives to "
#~ "setting $NB_UID and $NB_GID."
#~ msgstr ""

# 565fbbe944ed4e68a5e202eaf07d1402
#~ msgid "Startup Hooks"
#~ msgstr ""

# 70f6f3501e1b43d3a95e200c39eef8d2
#~ msgid ""
#~ "You can further customize the container"
#~ " environment by adding shell scripts "
#~ "(*.sh) to be sourced or executables "
#~ "(chmod +x) to be run to the "
#~ "paths below:"
#~ msgstr ""

# bdc8d9262aea4329b09bac1deb92d6da
#~ msgid ""
#~ "/usr/local/bin/start-notebook.d/ - handled "
#~ "before any of the standard options "
#~ "noted above are applied"
#~ msgstr ""

# 786fba9678e24e3ba5ded6536dc0492a
#~ msgid ""
#~ "/usr/local/bin/before-notebook.d/ - handled "
#~ "after all of the standard options "
#~ "noted above are applied and just "
#~ "before the notebook server launches"
#~ msgstr ""

# 5903b6a921cb42a9a8b6db0e9592769c
#~ msgid ""
#~ "See the run-hooks function in the"
#~ " jupyter/base-notebook start.sh script for"
#~ " execution details."
#~ msgstr ""

# ffb01f3597d1453bb0299e9a4a888757
#~ msgid "SSL Certificates"
#~ msgstr ""

# 7b1a34debd094e02930aa7197377b691
#~ msgid ""
#~ "You may mount SSL key and "
#~ "certificate files into a container and"
#~ " configure Jupyter Notebook to use "
#~ "them to accept HTTPS connections. For"
#~ " example, to mount a host folder "
#~ "containing a notebook.key and notebook.crt "
#~ "and use them, you might run the"
#~ " following:"
#~ msgstr ""

# 11ef89b3d17b4bcf827e73a7ebb13756
#~ msgid ""
#~ "The docker-stacks/examples for information "
#~ "about how to use Let's Encrypt "
#~ "certificates when you run these stacks"
#~ " on a publicly visible domain."
#~ msgstr ""

# 4a42ccc5b624431bbacdc8c1d5624fb4
#~ msgid ""
#~ "The jupyter_notebook_config.py file for how"
#~ " this Docker image generates a "
#~ "self-signed certificate."
#~ msgstr ""

# 95d9c3081fa34def82e309c53ef2147b
#~ msgid ""
#~ "The Jupyter Notebook documentation for "
#~ "best practices about securing a public"
#~ " notebook server in general."
#~ msgstr ""

# 9950b2e426414111ad46c6ba1e9d29bb
#~ msgid "Alternative Commands"
#~ msgstr ""

# 2e90717352804ebd8086eef378fa411d
#~ msgid "start.sh"
#~ msgstr ""

# 11637ea03062425e94964f2c70ed8676
#~ msgid ""
#~ "The start-notebook.sh script actually "
#~ "inherits most of its option handling "
#~ "capability from a more generic start.sh"
#~ " script. The start.sh script supports "
#~ "all of the features described above, "
#~ "but allows you to specify an "
#~ "arbitrary command to execute. For "
#~ "example, to run the text-based "
#~ "ipython console in a container, do "
#~ "the following:"
#~ msgstr ""

# 3d92501fb3b940b385ee986095610391
#~ msgid ""
#~ "This script is particularly useful when"
#~ " you derive a new Dockerfile from "
#~ "this image and install additional "
#~ "Jupyter applications with subcommands like "
#~ "jupyter console, jupyter kernelgateway, etc."
#~ msgstr ""

# ff1b1af310d54eedb852dc5eff7a4f7e
#~ msgid "Others"
#~ msgstr ""

# 127ffe0a552b4dafaa77d173883350d7
#~ msgid ""
#~ "You can bypass the provided scripts "
#~ "and specify an arbitrary start command."
#~ " If you do, keep in mind that"
#~ " features supported by the start.sh "
#~ "script and its kin will not "
#~ "function (e.g., GRANT_SUDO)."
#~ msgstr ""

# 1d8bc4b15c3044b3932e0df72dd694a7
#~ msgid "Conda Environments"
#~ msgstr ""

# 97935ba423ed4a8787f9895f00015e4b
#~ msgid ""
#~ "The default Python 3.x Conda environment"
#~ " resides in /opt/conda. The /opt/conda/bin"
#~ " directory is part of the default "
#~ "jovyan user's $PATH. That directory is"
#~ " also whitelisted for use in sudo "
#~ "commands by the start.sh script."
#~ msgstr ""

# a8fe459cc9ff43b3b2f31efd4587f145
#~ msgid ""
#~ "The jovyan user has full read/write "
#~ "access to the /opt/conda directory. You"
#~ " can use either conda or pip to"
#~ " install new packages without any "
#~ "additional permissions."
#~ msgstr ""

# 36939901b3744e3fb67d2bae58ae8e25
#~ msgid "Contributed Recipes"
#~ msgstr ""

# 8bc65b7f51f4442c95ea0dec5b4b2704
#~ msgid ""
#~ "Users sometimes share interesting ways "
#~ "of using the Jupyter Docker Stacks. "
#~ "We encourage users to contribute these"
#~ " recipes to the documentation in case"
#~ " they prove useful to other members"
#~ " of the community by submitting a "
#~ "pull request to docs/using/recipes.md. The "
#~ "sections below capture this knowledge."
#~ msgstr ""

# 7447af86f4f3438ba413a7e9cc9764e5
#~ msgid "Using sudo within a container"
#~ msgstr ""

# ed8292c31667424184fe7515a30f79cd
#~ msgid ""
#~ "Password authentication is disabled for "
#~ "the NB_USER (e.g., jovyan). This choice"
#~ " was made to avoid distributing "
#~ "images with a weak default password "
#~ "that users ~might~ will forget to "
#~ "change before running a container on "
#~ "a publicly accessible host."
#~ msgstr ""

# d22ae301bebb4857b866359ddbfb7e53
#~ msgid ""
#~ "You can grant the within-container "
#~ "NB_USER passwordless sudo access by "
#~ "adding -e GRANT_SUDO=yes and --user root"
#~ " to your Docker command line or "
#~ "appropriate container orchestrator config."
#~ msgstr ""

#~ msgid ""
#~ "You should only enable sudo if you"
#~ " trust the user and/or if the "
#~ "container is running on an isolated "
#~ "host. See Docker security documentation "
#~ "for more information about running "
#~ "containers as root."
#~ msgstr ""

# 5b38bd48b58242788cc8b581b575241a
#~ msgid "Using pip install or conda install in a Child Docker image"
#~ msgstr ""

# c35347a79a2e4a7faffe139767808965
#~ msgid ""
#~ "To use a requirements.txt file, first"
#~ " create your requirements.txt file with "
#~ "the listing of packages desired. Next,"
#~ " create a new Dockerfile like the "
#~ "one shown below."
#~ msgstr ""

# fd2320ac3001480992ab2dd80285467b
#~ msgid "Ref: docker-stacks/commit/79169618d571506304934a7b29039085e77db78c"
#~ msgstr ""

# 179407610520450ea0e4b566eac8ec96
#~ msgid "Add a Python 2.x environment"
#~ msgstr ""

# 19bf98219e344b80b68fbf7f3aa68ec6
#~ msgid ""
#~ "Python 2.x was removed from all "
#~ "images on August 10th, 2017, starting"
#~ " in tag cc9feab481f7. You can add "
#~ "a Python 2.x environment by defining "
#~ "your own Dockerfile inheriting from one"
#~ " of the images like so:"
#~ msgstr ""

# be4f7d9b615d490c87cc6393ed0fabf2
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/440"
#~ msgstr ""

#~ msgid "Add a Python 3.x environment"
#~ msgstr ""

#~ msgid ""
#~ "The default version of Python that "
#~ "ships with conda/ubuntu may not be "
#~ "the version you want. To add a "
#~ "conda environment with a different "
#~ "version and make it accessible to "
#~ "Jupyter, the instructions are very "
#~ "similar to Python 2.x but are "
#~ "slightly simpler (no need to switch "
#~ "to root):"
#~ msgstr ""

# 747e87a9067b4870bad5aa335ab39f7d
#~ msgid "Run JupyterLab"
#~ msgstr ""

# e062399bbaee4f1eb3ab48dcc60289b8
#~ msgid ""
#~ "JupyterLab is preinstalled as a notebook"
#~ " extension starting in tag c33a7dc0eece."
#~ msgstr ""

# 7c0f192d197143698dd371fff8fa3ceb
#~ msgid ""
#~ "Run jupyterlab using a command such "
#~ "as docker run -it --rm -p "
#~ "8888:8888 jupyter/datascience-notebook start.sh "
#~ "jupyter lab"
#~ msgstr ""

#~ msgid "Dask JupyterLab Extension"
#~ msgstr ""

#~ msgid ""
#~ "Dask JupyterLab Extension provides a "
#~ "JupyterLab extension to manage Dask "
#~ "clusters, as well as embed Dask's "
#~ "dashboard plots directly into JupyterLab "
#~ "panes. Create the Dockerfile as:"
#~ msgstr ""

#~ msgid "And build the image as:"
#~ msgstr ""

#~ msgid "Once built, run using the command:"
#~ msgstr ""

#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/999"
#~ msgstr ""

# e7842069e6ce432b9f1a12271e0ddc24
#~ msgid "Let's Encrypt a Notebook server"
#~ msgstr ""

# 4c00785b93734066b349b42b23c312af
#~ msgid ""
#~ "See the README for the simple "
#~ "automation here https://github.com/jupyter/docker-"
#~ "stacks/tree/master/examples/make-deploy which "
#~ "includes steps for requesting and "
#~ "renewing a Let's Encrypt certificate."
#~ msgstr ""

# c386f5913a78475487e9f12c76af9032
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/78"
#~ msgstr ""

# dd297c8f73a44707bf02064434a50a47
#~ msgid "Slideshows with Jupyter and RISE"
#~ msgstr ""

# a1834343ae3045ea962e0efc80f69443
#~ msgid ""
#~ "RISE allows via extension to create "
#~ "live slideshows of your notebooks, with"
#~ " no conversion, adding javascript "
#~ "Reveal.js:"
#~ msgstr ""

# 6e0c67b18d3546a9ab024c5663aa8f90
#~ msgid "Credit: Paolo D. based on docker-stacks/issues/43"
#~ msgstr ""

# 6bf66d68f2e5439b8403c0dd8ded40c5
#~ msgid "xgboost"
#~ msgstr ""

# a9bc4b88bd3d4bc1a7832f31677c298a
#~ msgid "Running behind a nginx proxy"
#~ msgstr ""

# dd58dbc3b08744a0b9415448d3bdbba6
#~ msgid ""
#~ "you would prefer to access the "
#~ "notebook at a server URL with a"
#~ " path (https://example.com/jupyter) rather than"
#~ " a port (https://example.com:8888)"
#~ msgstr ""

# cffd649e66ae4efb8122522e465ce3e3
#~ msgid ""
#~ "Here is a quick example NGINX "
#~ "configuration to get started. You'll "
#~ "need a server, a .crt and .key "
#~ "file for your server, and docker &"
#~ " docker-compose installed. Then just "
#~ "download the files at that gist "
#~ "and run docker-compose up -d to"
#~ " test it out. Customize the "
#~ "nginx.conf file to set the desired "
#~ "paths and add other services."
#~ msgstr ""

# 7ba37cfc11224013a862d6519168acd0
#~ msgid "Host volume mounts and notebook errors"
#~ msgstr ""

# 0fc6706374ee4a5d98517ec02ee24a03
#~ msgid ""
#~ "If you are mounting a host "
#~ "directory as /home/jovyan/work in your "
#~ "container and you receive permission "
#~ "errors or connection errors when you "
#~ "create a notebook, be sure that "
#~ "the jovyan user (UID=1000 by default)"
#~ " has read/write access to the "
#~ "directory on the host. Alternatively, "
#~ "specify the UID of the jovyan user"
#~ " on container startup using the -e"
#~ " NB_UID option described in the "
#~ "Common Features, Docker Options section"
#~ msgstr ""

# a6c910ab798b43ee91c0af160a3aadb6
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/199"
#~ msgstr ""

# 908924a0b4fa44d79fbca1413a0fb296
#~ msgid "Manpage installation"
#~ msgstr ""

# fb4a0f5bc3534bd9bb8909ce6512f4dd
#~ msgid ""
#~ "Adding the documentation on top of "
#~ "an existing singleuser image wastes a"
#~ " lot of space and requires "
#~ "reinstalling every system package, which "
#~ "can take additional time and bandwidth;"
#~ " the datascience-notebook image has "
#~ "been shown to grow by almost 3GB"
#~ " when adding manapages in this way."
#~ " Enabling manpages in the base Ubuntu"
#~ " layer prevents this container bloat:"
#~ msgstr ""

# 84b7fb0b5fd748ecba457f867a0e30bf
#~ msgid ""
#~ "Be sure to check the current base"
#~ " image in base-notebook before "
#~ "building."
#~ msgstr ""

# 5764b06de0d941a585e5107f313235f4
#~ msgid "JupyterHub"
#~ msgstr ""

# fbff97a16a2a4a53a69dd2d1c7dfbe91
#~ msgid "Use JupyterHub's dockerspawner"
#~ msgstr ""

# 8b1bc94531e7490fbaa012f5c4a257bd
#~ msgid ""
#~ "Swapping out the FROM line in the"
#~ " jupyterhub/singleuser Dockerfile should be "
#~ "enough for most cases."
#~ msgstr ""

# ce864521fffa4c89b7584d24296515d5
#~ msgid ""
#~ "Credit: Justin Tyberg, quanghoc, and Min"
#~ " RK based on docker-stacks/issues/124 "
#~ "and docker-stacks/pull/185"
#~ msgstr ""

# 6a5d92e7b071449686d148be90544e64
#~ msgid "Containers with a specific version of JupyterHub"
#~ msgstr ""

# 091b62f4a91c4d87b92554795a00744c
#~ msgid ""
#~ "To use a specific version of "
#~ "JupyterHub, the version of jupyterhub in"
#~ " your image should match the version"
#~ " in the Hub itself."
#~ msgstr ""

# 67db6ce9d62f499a9d9aaf675a86cddc
#~ msgid "Credit: MinRK"
#~ msgstr ""

# d4613cff20a140cbbbacc84ada8fcd87
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/177"
#~ msgstr ""

# 19439bd85c2946bb89f385651f8283dc
#~ msgid "Spark"
#~ msgstr ""

# 9c295c93db724e5fb11a8f870f805f41
#~ msgid "Using PySpark with AWS S3"
#~ msgstr ""

# 59f08373c7354fa4bb5b7c10441b5d69
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/127"
#~ msgstr ""

# c32dccc031664268983f72ed7927beff
#~ msgid "Using Local Spark JARs"
#~ msgstr ""

# 19614ffa973f49bab235cb5ac9cdf259
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/154"
#~ msgstr ""

# fc70801958a34e5aa578388147a8a1fb
#~ msgid "Using spark-packages.org"
#~ msgstr ""

# 031b9633ca0849e9a9035f4fa5ec2d29
#~ msgid ""
#~ "If you'd like to use packages from"
#~ " spark-packages.org, see "
#~ "https://gist.github.com/parente/c95fdaba5a9a066efaab for "
#~ "an example of how to specify the"
#~ " package identifier in the environment "
#~ "before creating a SparkContext."
#~ msgstr ""

# 08c4d39ccfa84551af78867ab37d3f18
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/43"
#~ msgstr ""

# 285d9bf0eefb480386dfdcd55fd76ef5
#~ msgid "Use jupyter/all-spark-notebooks with an existing Spark/YARN cluster"
#~ msgstr ""

# 1b1c743d85d542989f6a8f2c97a588d3
#~ msgid "Credit: britishbadger from docker-stacks/issues/369"
#~ msgstr ""

# 06d2e360eccb489abeeebada6c0b41eb
#~ msgid ""
#~ "Run Jupyter Notebook/Lab inside an "
#~ "already secured environment (i.e., with "
#~ "no token)"
#~ msgstr ""

# 42dd63565c4a4f67825f675972554d34
#~ msgid "(Adapted from issue 728)"
#~ msgstr ""

# 8af2ceb1414f46e1802681695b5917f8
#~ msgid ""
#~ "The default security is very good. "
#~ "There are use cases, encouraged by "
#~ "containers, where the jupyter container "
#~ "and the system it runs within, lie"
#~ " inside the security boundary. In "
#~ "these use cases it is convenient "
#~ "to launch the server without a "
#~ "password or token. In this case, "
#~ "you should use the start.sh script "
#~ "to launch the server with no "
#~ "token:"
#~ msgstr ""

# 158396013982441e9e62402c499dfb11
#~ msgid "Enable nbextension spellchecker for markdown (or any other nbextension)"
#~ msgstr ""

# 78ba1c20de2445fb9b76ec6202e4d794
#~ msgid "Ref: https://github.com/jupyter/docker-stacks/issues/675"
#~ msgstr ""

# f66d723263124285a641f0dee8a41565
#~ msgid "Running a Container"
#~ msgstr ""

# 3a614d7e864741199c1223a26fc37c03
#~ msgid "Using the Docker CLI"
#~ msgstr ""

# 3039d667df25426b84be7ab9d920cfee
#~ msgid ""
#~ "You can launch a local Docker "
#~ "container from the Jupyter Docker Stacks"
#~ " using the Docker command line "
#~ "interface. There are numerous ways to"
#~ " configure containers using the CLI. "
#~ "The following are some common patterns."
#~ msgstr ""

# 0ea4263c502142b2b3fa7f55a917af19
#~ msgid ""
#~ "Example 1 This command pulls the "
#~ "jupyter/scipy-notebook image tagged "
#~ "2c80cf3537ca from Docker Hub if it "
#~ "is not already present on the "
#~ "local host. It then starts a "
#~ "container running a Jupyter Notebook "
#~ "server and exposes the server on "
#~ "host port 8888. The server logs "
#~ "appear in the terminal and include "
#~ "a URL to the notebook server."
#~ msgstr ""

# 402a9d9ecccb479994d2903710aabaa6
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server but leaves the container "
#~ "intact on disk for later restart "
#~ "or permanent deletion using commands "
#~ "like the following:"
#~ msgstr ""

# fe38eef5fbe24b90ab070cefeef42230
#~ msgid ""
#~ "Example 2 This command pulls the "
#~ "jupyter/r-notebook image tagged e5c5a7d3e52d "
#~ "from Docker Hub if it is not "
#~ "already present on the local host. "
#~ "It then starts a container running "
#~ "a Jupyter Notebook server and exposes"
#~ " the server on host port 10000. "
#~ "The server logs appear in the "
#~ "terminal and include a URL to the"
#~ " notebook server, but with the "
#~ "internal container port (8888) instead "
#~ "of the the correct host port "
#~ "(10000)."
#~ msgstr ""

# d911c29555904311b29d8eb79fcb9843
#~ msgid ""
#~ "Pressing Ctrl-C shuts down the notebook"
#~ " server and immediately destroys the "
#~ "Docker container. Files written to "
#~ "~/work in the container remain touched."
#~ " Any other changes made in the "
#~ "container are lost."
#~ msgstr ""

# 718d037e82a64d69aea592f76b3f047b
#~ msgid ""
#~ "Example 3 This command pulls the "
#~ "jupyter/all-spark-notebook image currently "
#~ "tagged latest from Docker Hub if "
#~ "an image tagged latest is not "
#~ "already present on the local host. "
#~ "It then starts a container named "
#~ "notebook running a JupyterLab server and"
#~ " exposes the server on a randomly "
#~ "selected port."
#~ msgstr ""

# f9627b2638ec498ebfd06d0475e1dc4c
#~ msgid "Using Binder"
#~ msgstr ""

# 6e355acc72ca41a2aca2972df65259c7
#~ msgid ""
#~ "Binder is a service that allows "
#~ "you to create and share custom "
#~ "computing environments for projects in "
#~ "version control. You can use any "
#~ "of the Jupyter Docker Stacks images "
#~ "as a basis for a Binder-compatible"
#~ " Dockerfile. See the docker-stacks "
#~ "example and Using a Dockerfile sections"
#~ " in the Binder documentation for "
#~ "instructions."
#~ msgstr ""

# d6f8d0ee10b542488dce87b84eb48036
#~ msgid "Using JupyterHub"
#~ msgstr ""

# ef9a37b25db542dea89c9c1fb31c18cd
#~ msgid ""
#~ "You can configure JupyterHub to launcher"
#~ " Docker containers from the Jupyter "
#~ "Docker Stacks images. If you've been "
#~ "following the Zero to JupyterHub with"
#~ " Kubernetes guide, see the Use an "
#~ "existing Docker image section for "
#~ "details. If you have a custom "
#~ "JupyterHub deployment, see the Picking "
#~ "or building a Docker image instructions"
#~ " for the dockerspawner instead."
#~ msgstr ""

# bf63b713aece4a7eacc2ad77f6f47c2c
#~ msgid "Using Other Tools and Services"
#~ msgstr ""

# fcce8862fc7a41a394c1e19d35363653
#~ msgid ""
#~ "You can use the Jupyter Docker "
#~ "Stacks with any Docker-compatible "
#~ "technology (e.g., Docker Compose, docker-"
#~ "py, your favorite cloud container "
#~ "service). See the documentation of the"
#~ " tool, library, or service for "
#~ "details about how to reference, "
#~ "configure, and launch containers from "
#~ "these images."
#~ msgstr ""

# 75674f1f85cb43bcbc020de3b84f18f7
#~ msgid "Selecting an Image"
#~ msgstr ""

# 686b01e6feaf4363930c16cecff5f462
# cdbd4076608348a182dc09701223093a
#~ msgid "Core Stacks"
#~ msgstr ""

# daaad3b4f13e4c6395b0e9186c73030d
# d0275f3e7b07428a85c62db44d774d71
#~ msgid "Image Relationships"
#~ msgstr ""

# 892152661ffc4ea096ba152334ff086f
# a6f02cacf6334057bdb5eb1339411a32
#~ msgid "Community Stacks"
#~ msgstr ""

# fc2fca9d04f442e9a313123cec1174ff
#~ msgid ""
#~ "The Jupyter team maintains a set "
#~ "of Docker image definitions in the "
#~ "https://github.com/jupyter/docker-stacks GitHub "
#~ "repository. The following sections describe"
#~ " these images including their contents, "
#~ "relationships, and versioning strategy."
#~ msgstr ""

# 4e9d03b93e964d16b23b30610d17b3e2
#~ msgid "jupyter/base-notebook"
#~ msgstr ""

# f43dd3334aac4971a67e5bb833dafcb8
# 93db5d969cea480a827c0d6d028fc717
# 4ff6dbde14924b73b3a54bdb94096ba2
# da116e35b2494285abe8447ab372324b
# 6fb499ae6636492b979bad5a17733c4b
# c10b1e6040c84241a77edb90ea3306a4
# 227408f175a24d1cb70e69ca32f11434
# b8ff65660ef14b0692edbe3a2fdff42b
# b50d8b1a5d3849279bcbda725f9f8e62
#~ msgid "Source on GitHub | Dockerfile commit history | Docker Hub image tags"
#~ msgstr ""

# eea41b7365bd4751ae599beb4edfa168
#~ msgid ""
#~ "jupyter/base-notebook is a small image"
#~ " supporting the options common across "
#~ "all core stacks. It is the basis"
#~ " for all other stacks."
#~ msgstr ""

# facfb37f7fa64b85930d8f12fdeef2dd
#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no pandoc for saving "
#~ "notebooks as PDFs)"
#~ msgstr ""

# e90347274dd1459383e31a40bc6685f2
#~ msgid "Miniconda Python 3.x in /opt/conda"
#~ msgstr ""

# 0396d289dcdd49788f06c18efeca5013
#~ msgid ""
#~ "Unprivileged user jovyan (uid=1000, "
#~ "configurable, see options) in group "
#~ "users (gid=100) with ownership over the"
#~ " /home/jovyan and /opt/conda paths"
#~ msgstr ""

# 0e9211b01ef94b66bad9288682e1a833
#~ msgid ""
#~ "tini as the container entrypoint and "
#~ "a start-notebook.sh script as the "
#~ "default command"
#~ msgstr ""

# e38b63a14dae4b718a94c6e0523daf1e
#~ msgid ""
#~ "A start-singleuser.sh script useful for"
#~ " launching containers in JupyterHub"
#~ msgstr ""

# 0a603f43d1b34be28d2c1002f6686fda
#~ msgid ""
#~ "A start.sh script useful for running "
#~ "alternative commands in the container "
#~ "(e.g. ipython, jupyter kernelgateway, jupyter"
#~ " lab)"
#~ msgstr ""

# 9cff5da6908e42d5a7da093ba0bfcfe7
#~ msgid "jupyter/minimal-notebook"
#~ msgstr ""

# 8596676795f142d2912833d1320aa6a0
#~ msgid ""
#~ "jupyter/minimal-notebook adds command line "
#~ "tools useful when working in Jupyter "
#~ "applications."
#~ msgstr ""

# b1167e8a2430451fbb41ea876714d541
#~ msgid "Everything in jupyter/base-notebook"
#~ msgstr ""

# c46294c22bd44a86ac08b977f060a21d
#~ msgid "Pandoc and TeX Live for notebook document conversion"
#~ msgstr ""

# ad6fec23e1bf4a42b0cafd2f15e74574
#~ msgid "git, emacs, jed, nano, tzdata, and unzip"
#~ msgstr ""

# 1c7363e9e14148f7a302b0075598590a
#~ msgid "jupyter/r-notebook"
#~ msgstr ""

# a6bc72d21b0c4102b16a38df077a48dd
#~ msgid "jupyter/r-notebook includes popular packages from the R ecosystem."
#~ msgstr ""

# bfe937844bef465081bdd0cc74064b77
# eb5808624ae249d5aa6b1b06350035dc
#~ msgid "Everything in jupyter/minimal-notebook and its ancestor images"
#~ msgstr ""

# db6a08c9a21f4e1eae1f4a7c7656a60d
#~ msgid "The R interpreter and base environment"
#~ msgstr ""

# c1cf2ef729d04aacbbf220cbe78edb07
# 486896c4482443dcb0f7408c888f29e9
#~ msgid "IRKernel to support R code in Jupyter notebooks"
#~ msgstr ""

# ce8993612e2e44aea34dedc24740025d
#~ msgid ""
#~ "tidyverse packages, including ggplot2, dplyr,"
#~ " tidyr, readr, purrr, tibble, stringr, "
#~ "lubridate, and broom from conda-forge"
#~ msgstr ""

# dcf536112dad48369dbd06c240f5b337
#~ msgid ""
#~ "plyr, devtools, shiny, rmarkdown, forecast,"
#~ " rsqlite, reshape2, nycflights13, caret, "
#~ "rcurl, and randomforest packages from "
#~ "conda-forge"
#~ msgstr ""

# 3e8e6435e2b64a9fb9be8fe252ed2f3a
#~ msgid "jupyter/scipy-notebook"
#~ msgstr ""

# 7d06f0f385c844389eabb820a73b9cf1
#~ msgid ""
#~ "jupyter/scipy-notebook includes popular "
#~ "packages from the scientific Python "
#~ "ecosystem."
#~ msgstr ""

# 9b123df88f864a9f8bd0472877a47a23
#~ msgid ""
#~ "pandas, numexpr, matplotlib, scipy, seaborn,"
#~ " scikit-learn, scikit-image, sympy, "
#~ "cython, patsy, statsmodel, cloudpickle, dill,"
#~ " numba, bokeh, sqlalchemy, hdf5, vincent,"
#~ " beautifulsoup, protobuf, and xlrd packages"
#~ msgstr ""

#~ msgid ""
#~ "ipywidgets and ipympl for interactive "
#~ "visualizations and plots in Python "
#~ "notebooks"
#~ msgstr ""

# 538f0c0d60e84ac7b96c747c780dfd9e
#~ msgid "Facets for visualizing machine learning datasets"
#~ msgstr ""

# 91f89dafe55d46219648e753b94f3054
#~ msgid "jupyter/tensorflow-notebook"
#~ msgstr ""

# 183ce48c172144bc91143bc63797512d
#~ msgid ""
#~ "jupyter/tensorflow-notebook includes popular "
#~ "Python deep learning libraries."
#~ msgstr ""

# 5406ba3cf8a644a79a678c7968ef36cc
# 7dad34e3954840d69b1c418bfdc475c5
#~ msgid "Everything in jupyter/scipy-notebook and its ancestor images"
#~ msgstr ""

# 7698f92c854b4324a3371453e3ee1878
#~ msgid "tensorflow and keras machine learning libraries"
#~ msgstr ""

# e1403de76d344f4d93bd47a91dd00428
#~ msgid "jupyter/datascience-notebook"
#~ msgstr ""

# 2bd4e59533d04b86846cea01ccf36ed4
#~ msgid ""
#~ "jupyter/datascience-notebook includes libraries "
#~ "for data analysis from the Julia, "
#~ "Python, and R communities."
#~ msgstr ""

# ba7ecdc5c2444acd86073ac84157e7cf
#~ msgid ""
#~ "Everything in the jupyter/scipy-notebook "
#~ "and jupyter/r-notebook images, and their "
#~ "ancestor images"
#~ msgstr ""

# bfa2ae2246be45fdb389767d6f74baa6
#~ msgid "The Julia compiler and base environment"
#~ msgstr ""

# 31750842f94747f4a0ebd0ca4ac8f2af
#~ msgid "IJulia to support Julia code in Jupyter notebooks"
#~ msgstr ""

# d8985019373a4360a66ce8c6e32056fa
#~ msgid "HDF5, Gadfly, and RDatasets packages"
#~ msgstr ""

# 051a6e882e974e599bc0221add5e0c50
#~ msgid "jupyter/pyspark-notebook"
#~ msgstr ""

# a1a474f29c9047d6bb99e9a41e789351
#~ msgid ""
#~ "jupyter/pyspark-notebook includes Python "
#~ "support for Apache Spark, optionally on"
#~ " Mesos."
#~ msgstr ""

# 6d585f39fb334a5c95c7f9864baea8a9
#~ msgid "Apache Spark with Hadoop binaries"
#~ msgstr ""

# 33bbd9311c5640008e775210d3f75097
#~ msgid "Mesos client libraries"
#~ msgstr ""

# dcdbe62ca177455881f879d5809648d9
#~ msgid "jupyter/all-spark-notebook"
#~ msgstr ""

# 954fbce53b9d4e3c90c88a65e7d138bd
#~ msgid ""
#~ "jupyter/all-spark-notebook includes Python,"
#~ " R, and Scala support for Apache "
#~ "Spark, optionally on Mesos."
#~ msgstr ""

# 671183aa9bcb4f4ba34933a4cc0e28c0
#~ msgid "Everything in jupyter/pyspark-notebook and its ancestor images"
#~ msgstr ""

# 0114a45f63054b1e9a56aff6c04bd670
#~ msgid ""
#~ "Apache Toree and spylon-kernel to "
#~ "support Scala code in Jupyter notebooks"
#~ msgstr ""

# aa21cb83205c4045960bcfd3f3fc1542
#~ msgid "ggplot2, sparklyr, and rcurl packages"
#~ msgstr ""

# 07d86ef0562f455abb691bffeaca467f
#~ msgid ""
#~ "The following diagram depicts the build"
#~ " dependency tree of the core images."
#~ " (i.e., the FROM statements in their"
#~ " Dockerfiles). Any given image inherits "
#~ "the complete content of all ancestor "
#~ "images pointing to it."
#~ msgstr ""

# fbf5d0a65b8748a5ba1b29a0e43ce9f4
#~ msgid "Builds"
#~ msgstr ""

# 75fc61a8cc874e9196ee00f7af15bb0b
#~ msgid ""
#~ "Pull requests to the jupyter/docker-"
#~ "stacks repository trigger builds of all"
#~ " images on Travis CI. These images"
#~ " are for testing purposes only and"
#~ " are not saved for use. When "
#~ "pull requests merge to master, all "
#~ "images rebuild on Docker Cloud and "
#~ "become available to docker pull from "
#~ "Docker Hub."
#~ msgstr ""

# d226a5a7f673440cbe70097864dda848
#~ msgid "Versioning"
#~ msgstr ""

# 34b4f765c48944bd939679eeb9810497
#~ msgid ""
#~ "The latest tag in each Docker Hub"
#~ " repository tracks the master branch "
#~ "HEAD reference on GitHub. latest is "
#~ "a moving target, by definition, and "
#~ "will have backward-incompatible changes "
#~ "regularly."
#~ msgstr ""

# 7ea772c3bc1d4463b29db3b57e48be8d
#~ msgid ""
#~ "Every image on Docker Hub also "
#~ "receives a 12-character tag which "
#~ "corresponds with the git commit SHA "
#~ "that triggered the image build. You "
#~ "can inspect the state of the "
#~ "jupyter/docker-stacks repository for that "
#~ "commit to review the definition of "
#~ "the image (e.g., images with tag "
#~ "7c45ec67c8e7 were built from "
#~ "https://github.com/jupyter/docker-stacks/tree/7c45ec67c8e7)."
#~ msgstr ""

# cf34bef9989940dda5de9dc026732a4c
#~ msgid ""
#~ "csharp-notebook is a community Jupyter"
#~ " Docker Stack image. Try C# in "
#~ "Jupyter Notebooks. The image includes "
#~ "more than 200 Jupyter Notebooks with "
#~ "example C# code and can readily be"
#~ " tried online via mybinder.org. Click "
#~ "here to launch ."
#~ msgstr ""

# e5c4a7b08c2f4b34b361a923f9fb3dbd
#~ msgid ""
#~ "education-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes nbgrader and RISE on top"
#~ " of the datascience-notebook image. "
#~ "Click here to launch it on ."
#~ msgstr ""

# 8a550c70c3454d72b976cabc1cbdf465
#~ msgid "crosscompass/ihaskell-notebook"
#~ msgstr ""

# 997dafa5bad846f49a7eee78001ed3fc
#~ msgid ""
#~ "crosscompass/ihaskell-notebook is based on "
#~ "IHaskell. Includes popular packages and "
#~ "example notebooks."
#~ msgstr ""

# 9af612ef9b1847e9a537228c2d3bc77d
#~ msgid "Try it on binder:"
#~ msgstr ""

# d514a88096544a2ca92ceaf14b1323eb
#~ msgid ""
#~ "java-notebook is a community Jupyter "
#~ "Docker Stack image. The image includes"
#~ " IJava kernel on top of the "
#~ "minimal-notebook image. Click here to "
#~ "launch it on ."
#~ msgstr ""

# e5b3d27fa68b47d4a2c02c7a039d7daf
#~ msgid ""
#~ "sage-notebook is a community Jupyter "
#~ "Docker Stack image with the sagemath "
#~ "kernel on top of the minimal-"
#~ "notebook image. Click here to launch "
#~ "it on ."
#~ msgstr ""

#~ msgid ""
#~ "GPU-Jupyter: Leverage Jupyter Notebooks "
#~ "with the power of your NVIDIA GPU"
#~ " and perform GPU calculations using "
#~ "Tensorflow and Pytorch in collaborative "
#~ "notebooks. This is done by generating"
#~ " a Dockerfile, that consists of the"
#~ " nvidia/cuda base image, the well-"
#~ "maintained docker-stacks that is "
#~ "integrated as submodule and GPU-able "
#~ "libraries like Tensorflow, Keras and "
#~ "PyTorch on top of it."
#~ msgstr ""

#~ msgid ""
#~ "cgspatial-notebook is a community "
#~ "Jupyter Docker Stack image. The image"
#~ " includes major geospatial Python & R"
#~ " libraries on top of the "
#~ "datascience-notebook image. Try it on "
#~ "binder:"
#~ msgstr ""

# f9f4ef31795249d9bf2a752dfbb27a8f
#~ msgid ""
#~ "See the contributing guide for "
#~ "information about how to create your "
#~ "own Jupyter Docker Stack."
#~ msgstr ""

# 7b67588ff359486cb64810359db6704c
#~ msgid "Image Specifics"
#~ msgstr ""

# 4e5d822c2e1a410099f1ab5831e29927
#~ msgid "Apache Spark"
#~ msgstr ""

# 433d8d99798649029dafd444253567b4
#~ msgid "Specific Docker Image Options"
#~ msgstr ""

# 70083fc71521409895897387117748bc
#~ msgid ""
#~ "-p 4040:4040 - The jupyter/pyspark-"
#~ "notebook and jupyter/all-spark-notebook "
#~ "images open SparkUI (Spark Monitoring "
#~ "and Instrumentation UI) at default port"
#~ " 4040, this option map 4040 port "
#~ "inside docker container to 4040 port "
#~ "on host machine . Note every new"
#~ " spark context that is created is "
#~ "put onto an incrementing port (ie. "
#~ "4040, 4041, 4042, etc.), and it "
#~ "might be necessary to open multiple "
#~ "ports. For example: docker run -d "
#~ "-p 8888:8888 -p 4040:4040 -p 4041:4041"
#~ " jupyter/pyspark-notebook"
#~ msgstr ""

# 2449b18de82e4d129cbd49e52ce9e522
#~ msgid "Usage Examples"
#~ msgstr ""

# ec077f84f7394baba4071d0d8a9c9dbf
#~ msgid ""
#~ "The jupyter/pyspark-notebook and jupyter"
#~ "/all-spark-notebook images support the "
#~ "use of Apache Spark in Python, R,"
#~ " and Scala notebooks. The following "
#~ "sections provide some examples of how"
#~ " to get started using them."
#~ msgstr ""

# ca35b3b020914e2eb2e877199a90d4a4
#~ msgid "Using Spark Local Mode"
#~ msgstr ""

# 2c5367b84e444a1aa504910b22ba1454
# 09d8b02687704d368a670cb243e299fb
#~ msgid "In a Python Notebook"
#~ msgstr ""

# 2b5c49ea60184570a8b50622140c22e1
# 192add33e94844f080ae03254899e2ee
#~ msgid "In a R Notebook"
#~ msgstr ""

# 80cedeb3b4514de792dba8e03b1c8774
# 5f3159414ddc427699709ddef740d6fd
#~ msgid "In a Spylon Kernel Scala Notebook"
#~ msgstr ""

# 07c9256c669b488aaa2df48676d5a188
#~ msgid ""
#~ "Spylon kernel instantiates a SparkContext "
#~ "for you in variable sc after you"
#~ " configure Spark options in a "
#~ "%%init_spark magic cell."
#~ msgstr ""

# aeec453983524d3ab59f7241cf8bac7b
# 472a48e72aaf46ca86a89e1598595045
#~ msgid "In an Apache Toree Scala Notebook"
#~ msgstr ""

# 762d164260cd4938b5f9556b29b0e171
#~ msgid ""
#~ "Apache Toree instantiates a local "
#~ "SparkContext for you in variable sc "
#~ "when the kernel starts."
#~ msgstr ""

# 8da1ef6876324b61885c5dec2c6a9cbf
#~ msgid "Connecting to a Spark Cluster on Mesos"
#~ msgstr ""

# e8c29961728146a28c6581966a2d2341
#~ msgid "Deploy Spark on Mesos."
#~ msgstr ""

# 1838d7f4481246538ca4ffe89e02ff4d
#~ msgid ""
#~ "Configure each slave with the --no-"
#~ "switch_user flag or create the $NB_USER"
#~ " account on every slave node."
#~ msgstr ""

# d4ee49cc6cb547389ed3228e74a4a67c
# 4b8c4c1e7ea441f1af4b4e0fbed73888
#~ msgid ""
#~ "Run the Docker container with --net=host"
#~ " in a location that is network "
#~ "addressable by all of your Spark "
#~ "workers. (This is a Spark networking "
#~ "requirement.)"
#~ msgstr ""

# 9a026387155e46fa8e4e1ea3f00d3a63
# 68e479d8f50e4685a0fb5de56a978347
#~ msgid ""
#~ "NOTE: When using --net=host, you must"
#~ " also use the flags --pid=host -e "
#~ "TINI_SUBREAPER=true. See https://github.com/jupyter"
#~ "/docker-stacks/issues/64 for details."
#~ msgstr ""

# 929575857ae647aebbcb721af39bdd7e
#~ msgid ""
#~ "The Apache Toree kernel automatically "
#~ "creates a SparkContext when it starts"
#~ " based on configuration information from"
#~ " its command line arguments and "
#~ "environment variables. You can pass "
#~ "information about your Mesos cluster via"
#~ " the SPARK_OPTS environment variable when"
#~ " you spawn a container."
#~ msgstr ""

# da5d5d861e914df98df9dba50fb3d66a
#~ msgid "Connecting to a Spark Cluster in Standalone Mode"
#~ msgstr ""

# d5a341bb44524a8cb33f086803daaf63
#~ msgid "Deploy Spark in Standalone Mode."
#~ msgstr ""

# 85baa5bd4ed5426b96dad49dacfab9cb
#~ msgid "Tensorflow"
#~ msgstr ""

# 4249b4b266fc4aeeb85dc8386ab60592
#~ msgid ""
#~ "The jupyter/tensorflow-notebook image supports"
#~ " the use of Tensorflow in single "
#~ "machine or distributed mode."
#~ msgstr ""

# 68fba23f7cd94702a9dead3c51719206
#~ msgid "Single Machine Mode"
#~ msgstr ""

# d4b74babe01d4a3a86c46844a737151b
#~ msgid "Distributed Mode"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid ""
#~ "Minimally-functional Jupyter Notebook server"
#~ " (e.g., no [pandoc](https://pandoc.org/) for "
#~ "saving notebooks as PDFs)"
#~ msgstr ""

#~ msgid ""
#~ "[Pandoc](http://pandoc.org) and [TeX "
#~ "Live](https://www.tug.org/texlive/) for notebook "
#~ "document conversion"
#~ msgstr ""

#~ msgid ""
#~ "[git](https://git-scm.com/), "
#~ "[emacs](https://www.gnu.org/software/emacs/), "
#~ "[vi](https://vim.org/) (actually `vim-tiny`), "
#~ "[jed](https://www.jedsoft.org/jed/), [nano](https://www.nano-"
#~ "editor.org/), tzdata, and"
#~ msgstr ""

#~ msgid "unzip"
#~ msgstr ""

#~ msgid ""
#~ "[pandas](https://pandas.pydata.org/), "
#~ "[numexpr](https://github.com/pydata/numexpr), "
#~ "[matplotlib](https://matplotlib.org/), "
#~ "[scipy](https://www.scipy.org/),"
#~ msgstr ""

#~ msgid ""
#~ "[seaborn](https://seaborn.pydata.org/), [scikit-"
#~ "learn](http://scikit-learn.org/stable/), [scikit-"
#~ "image](http://scikit-image.org/), "
#~ "[sympy](http://www.sympy.org/en/index.html), "
#~ "[cython](http://cython.org/), "
#~ "[patsy](https://patsy.readthedocs.io/en/latest/), "
#~ "[statsmodel](http://www.statsmodels.org/stable/index.html), "
#~ "[cloudpickle](https://github.com/cloudpipe/cloudpickle), "
#~ "[dill](https://pypi.python.org/pypi/dill), "
#~ "[numba](https://numba.pydata.org/), "
#~ "[bokeh](https://bokeh.pydata.org/en/latest/), "
#~ "[sqlalchemy](https://www.sqlalchemy.org/), "
#~ "[hdf5](http://www.h5py.org/), "
#~ "[vincent](http://vincent.readthedocs.io/en/latest/), "
#~ "[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/), "
#~ "[protobuf](https://developers.google.com/protocol-"
#~ "buffers/docs/pythontutorial), and [xlrd](http://www"
#~ ".python-excel.org/) packages * "
#~ "[ipywidgets](https://ipywidgets.readthedocs.io/en/stable/) and"
#~ " [ipympl](https://github.com/matplotlib/jupyter-matplotlib)"
#~ " for interactive visualizations and plots"
#~ " in Python notebooks * "
#~ "[Facets](https://github.com/PAIR-code/facets) for "
#~ "visualizing machine learning datasets"
#~ msgstr ""

#~ msgid "Try it on binder: [![launch Learn You a Haskell for Great"
#~ msgstr ""

#~ msgid ""
#~ "Good!](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/jamesdbrock"
#~ "/learn-you-a-haskell-"
#~ "notebook/master?urlpath=lab/tree/learn_you_a_haskell/00-preface.ipynb)"
#~ msgstr ""

